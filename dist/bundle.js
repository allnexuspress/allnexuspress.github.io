(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

var _navMobile = require('./nav-mobile');

var _navMobile2 = _interopRequireDefault(_navMobile);

var _navLg = require('./nav-lg');

var _navLg2 = _interopRequireDefault(_navLg);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DB = 'https://nexus-catalog.firebaseio.com/posts.json?auth=7g7pyKKykN3N5ewrImhOaS6vwrFsc5fKkrk8ejzf';
var alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'r', 's', 't', 'u', 'v', 'w', 'z'];

var $parallax = document.querySelector('.parallax');
var $content = document.querySelector('.content');
var $nav = document.getElementById('js-nav');
var $title = document.getElementById('js-title');

// 0 = artist, 1 = title
var sortKey = 0;
var entries = {
	byAuthor: [],
	byTitle: []
};
var activeEntries = {};
var headerIsVisible = true;

var articleTemplate = '\n\t<article class="article__outer">\n\t\t<div class="article__inner">\n\t\t\t<div class="article__heading">\n\t\t\t\t<a class="js-entry-title"></a>\n\t\t\t\t<h2 class="article-heading__title"></h2>\n\t\t\t\t<div class="article-heading__name">\n\t\t\t\t\t<span class="article-heading__name--first"></span>\n\t\t\t\t\t<a class="js-entry-artist"></a>\n\t\t\t\t\t<span class="article-heading__name--last"></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\t\n\t\t\t<div class="article__images-outer">\n\t\t\t\t<div class="article__images-inner"></div>\n\t\t\t\t<p class="js-description"></p>\n\t\t\t</div>\n\t\t</div>\n\t</article>\n';

var scrollToTop = function scrollToTop() {
	var thing = document.querySelector('.parallax');
	thing.scrollTop = 0;
};

var addSortButtonListeners = function addSortButtonListeners() {
	var $artist = document.getElementById('js-by-artist');
	var $title = document.getElementById('js-by-title');

	$artist.addEventListener('click', function () {
		scrollToTop();
		if (sortKey) {
			sortKey = 0;
			renderEntries();
		}
	});

	$title.addEventListener('click', function () {
		scrollToTop();
		if (!sortKey) {
			sortKey = 1;
			renderEntries();
		}
	});
};

var isShowing = false;
var toggleMobileNav = function toggleMobileNav() {
	var $icon = document.getElementById('js-angle-icon');
	var $list = document.getElementById('js-list');

	if (!isShowing) {
		$nav.classList.add('u-show');
		$icon.setAttribute('style', 'transform: rotate(180deg');
		$list.setAttribute('style', 'transform: translateY(210px)');

		isShowing = true;
	} else {
		$nav.classList.remove('u-show');
		$nav.classList.add('u-hide');
		$icon.setAttribute('style', 'transform: rotate(0deg');
		$list.setAttribute('style', 'transform: translateY(65px)');

		isShowing = false;
	}
};

var addMobileControlButton = function addMobileControlButton() {
	var $button = document.getElementById('js-mobile-nav');
	$button.addEventListener('click', toggleMobileNav);
};

var makeAlphabet = function makeAlphabet() {
	var $outer = document.querySelector('.alphabet__letters');
	$outer.innerHTML = '';

	alphabet.forEach(function (letter) {
		var $anchor = document.createElement('a');

		$anchor.innerHTML = letter.toUpperCase();
		$anchor.className = 'alphabet__letter-anchor';
		if (activeEntries[letter]) {
			$anchor.classList.add('u-active');
			$anchor.addEventListener('click', function () {
				var letterNode = document.getElementById(letter);
				var target = letter === 'a' ? document.getElementById('anchor-target') : letterNode.parentElement.parentElement.parentElement.parentElement.previousElementSibling.querySelector('.js-description');
				console.log('target: ', target);
				target.scrollIntoView({ behavior: "smooth", block: "start" });
			});
		}
		$outer.append($anchor);
	});
};

var clearAnchors = function clearAnchors(prevSelector) {
	var $entries = Array.from(document.querySelectorAll(prevSelector));
	$entries.forEach(function (entry) {
		return entry.removeAttribute('name');
	});
};

var findFirstEntry = function findFirstEntry(char) {
	var selector = sortKey ? '.js-entry-title' : '.js-entry-artist';
	var prevSelector = !sortKey ? '.js-entry-title' : '.js-entry-artist';
	var $entries = Array.from(document.querySelectorAll(selector));

	clearAnchors(prevSelector);

	return $entries.find(function (entry) {
		var node = entry.nextElementSibling;
		return node.innerHTML[0] === char || node.innerHTML[0] === char.toUpperCase();
	});
};

var setAlphabetAnchors = function setAlphabetAnchors() {
	activeEntries = {};

	alphabet.forEach(function (char) {
		var firstEntry = findFirstEntry(char);

		if (firstEntry) {
			activeEntries[char] = 1;
			firstEntry.setAttribute('id', char);
		}
	});

	makeAlphabet();
};

var renderImages = function renderImages(images, $images) {
	images.forEach(function (image) {
		var src = '../../assets/images/' + image;
		var $img = document.createElement('IMG');
		$img.src = src;
		$images.append($img);
	});
};

var renderEntries = function renderEntries() {
	var $articleList = document.getElementById('js-list');
	var entriesList = sortKey ? entries.byTitle : entries.byAuthor;

	$articleList.innerHTML = '';

	entriesList.forEach(function (entry) {
		var title = entry.title,
		    lastName = entry.lastName,
		    firstName = entry.firstName,
		    description = entry.description,
		    images = entry.images;


		$articleList.insertAdjacentHTML('beforeend', articleTemplate);

		var $imagesNodes = document.querySelectorAll('.article__images-inner');
		var $images = $imagesNodes[$imagesNodes.length - 1];

		if (images.length) renderImages(images, $images);

		var $descriptionNode = document.createElement('p');
		$descriptionNode.classList.add('.js-description', 'article-description');
		$descriptionNode.innerHTML = description;

		$images.append($descriptionNode);

		var $titleNodes = document.querySelectorAll('.article-heading__title');
		var $title = $titleNodes[$titleNodes.length - 1];

		var $firstNodes = document.querySelectorAll('.article-heading__name--first');
		var $first = $firstNodes[$firstNodes.length - 1];

		var $lastNodes = document.querySelectorAll('.article-heading__name--last');
		var $last = $lastNodes[$lastNodes.length - 1];

		$title.innerHTML = title;
		$first.innerHTML = firstName;
		$last.innerHTML = lastName;
	});

	setAlphabetAnchors();
};

var sortByTitle = function sortByTitle() {
	entries.byTitle.sort(function (a, b) {
		var aTitle = a.title[0].toUpperCase();
		var bTitle = b.title[0].toUpperCase();
		if (aTitle > bTitle) return 1;else if (aTitle < bTitle) return -1;else return 0;
	});
};

var setData = function setData(data) {
	entries.byAuthor = data;
	entries.byTitle = data.slice();
	sortByTitle();
	renderEntries();
};

var fetchData = function fetchData() {
	fetch(DB).then(function (res) {
		return res.json();
	}).then(function (data) {
		console.log(data);
		setData(data);
	}).then(function () {}).catch(function (err) {
		return console.warn(err);
	});
};

var init = function init() {
	fetchData();
	// mobileNav();
	(0, _navLg2.default)();
	makeAlphabet();
	addSortButtonListeners();
	// addMobileControlButton();
};

init();

},{"./nav-lg":2,"./nav-mobile":3}],2:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
var template = '<div class="nav__inner">\n\t\t<div class="nav__sort-by">\n\t\t\t<span class="sort-by__title">Sort by</span>\n\t\t\t<button class="sort-by__by-artist" id="js-by-artist">Artist</button>\n\t\t\t<span class="sort-by__divider"> | </span>\n\t\t\t\t<button class="sort-by__by-title" id="js-by-title">Title</button>\n\t\t</div>\n\t\t<div class="nav__alphabet">\n\t\t\t<span class="alphabet__title">Go to</span>\n\t\t\t<div class="alphabet__letters"></div>\n\t\t</div>\n\t</div>';

var navLg = function navLg() {
	var navOuter = document.getElementById('js-nav');
	navOuter.innerHTML = template;
};

exports.default = navLg;

},{}],3:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
var template = '<div class="mobile-controls__inner">\n\t\t\t<h1 class="mobile-controls__title">Nexus Press</h1>\n\t\t\t<button class="mobile-controls__menu-open-outer" id="js-mobile-nav">\n\t\t\t\t\t<i class="mobile-controls__menu-open fas fa-angle-down" id="js-angle-icon"></i>\n\t\t\t</button>\n\t</div>';

var mobileNav = function mobileNav() {
	var outer = document.getElementById('js-nav-mobile');
	outer.innerHTML = template;
};

exports.default = mobileNav;

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
