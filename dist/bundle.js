(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
var articleTemplate = "\n\t<article class=\"article__outer\">\n\t\t<div class=\"article__inner\">\n\t\t\t<div class=\"article__heading\">\n\t\t\t\t<a class=\"js-entry-title\"></a>\n\t\t\t\t<h2 class=\"article-heading__title\"></h2>\n\t\t\t\t<div class=\"article-heading__name\">\n\t\t\t\t\t<span class=\"article-heading__name--first\"></span>\n\t\t\t\t\t<a class=\"js-entry-artist\"></a>\n\t\t\t\t\t<span class=\"article-heading__name--last\"></span>\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t\t\t<div class=\"article__images-outer\">\n\t\t\t\t<div class=\"article__images-inner\"></div>\n\t\t\t\t<p class=\"js-article-anchor-target\"></p>\n\t\t</div>\n\t</article>\n";

exports.default = articleTemplate;

},{}],2:[function(require,module,exports){
'use strict';

var _navLg = require('./nav-lg');

var _navLg2 = _interopRequireDefault(_navLg);

var _articleTemplate = require('./article-template');

var _articleTemplate2 = _interopRequireDefault(_articleTemplate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DB = 'https://nexus-catalog.firebaseio.com/posts.json?auth=7g7pyKKykN3N5ewrImhOaS6vwrFsc5fKkrk8ejzf';
var alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'r', 's', 't', 'u', 'v', 'w', 'z'];

var $nav = document.getElementById('js-nav');
var $parallax = document.querySelector('.parallax');
var $content = document.querySelector('.content');
var $title = document.getElementById('js-title');
var $arrow = document.querySelector('.arrow');
var $modal = document.querySelector('.modal');
var $lightbox = document.querySelector('.lightbox');
var $view = document.querySelector('.lightbox-view');

var sortKey = 0; // 0 = artist, 1 = title
var entries = { byAuthor: [], byTitle: [] };
var activeEntries = {};

var lightbox = false;
var attachImageListeners = function attachImageListeners() {
	var $images = Array.from(document.querySelectorAll('.article-image'));
	console.log('images: ', $images);

	$images.forEach(function (img) {
		img.addEventListener('click', function () {
			console.log('cliked ', img.src);
			var src = img.src;
			$lightbox.classList.add('show-img');
			$view.setAttribute('style', 'background-image: url(' + src + ')');
			lightbox = true;
		});
	});

	$view.addEventListener('click', function () {
		if (lightbox) {
			$lightbox.classList.remove('show-img');
			lightbox = false;
		}
	});
};

var modal = false;
var attachModalListeners = function attachModalListeners() {
	var $find = document.getElementById('js-find');

	$find.addEventListener('click', function () {
		$modal.classList.add('show');
		modal = true;
	});

	$modal.addEventListener('click', function () {
		setTimeout(function () {
			$modal.classList.remove('show');
			modal = false;
		}, 500);
	});

	window.addEventListener('keydown', function () {
		// preventDefault();
		console.log('keydown');
		if (modal) {
			$modal.classList.remove('show');
			modal = false;
		}
	});
};

var scrollToTop = function scrollToTop() {
	var thing = document.getElementById('anchor-target');
	thing.scrollIntoView({ behavior: "smooth", block: "start" });
};

var prev = void 0;
var current = 0;
var isShowing = false;
var attachArrowListeners = function attachArrowListeners() {
	$arrow.addEventListener('click', function () {
		scrollToTop();
	});

	$parallax.addEventListener('scroll', function () {

		var y = $title.getBoundingClientRect().y;
		if (current !== y) {
			prev = current;
			current = y;
		}

		if (y <= -50 && !isShowing) {
			$arrow.classList.add('show');
			isShowing = true;
		} else if (y > -50 && isShowing) {
			$arrow.classList.remove('show');
			isShowing = false;
		}
	});
};

var addSortButtonListeners = function addSortButtonListeners() {
	var $byArtist = document.getElementById('js-by-artist');
	var $byTitle = document.getElementById('js-by-title');
	$byArtist.addEventListener('click', function () {
		scrollToTop();
		if (sortKey) {
			sortKey = 0;
			$byArtist.classList.add('active');
			$byTitle.classList.remove('active');
			renderEntries();
		}
	});

	$byTitle.addEventListener('click', function () {
		scrollToTop();
		if (!sortKey) {
			sortKey = 1;
			$byTitle.classList.add('active');
			$byArtist.classList.remove('active');
			renderEntries();
		}
	});
};

var makeAlphabet = function makeAlphabet() {
	var $outer = document.querySelector('.alphabet__letters');
	$outer.innerHTML = '';

	alphabet.forEach(function (letter) {
		var $anchor = document.createElement('a');

		$anchor.innerHTML = letter.toUpperCase();
		$anchor.className = 'alphabet__letter-anchor';
		if (activeEntries[letter]) {
			$anchor.classList.add('u-active');
			$anchor.addEventListener('click', function () {
				var letterNode = document.getElementById(letter);
				var target = letter === 'a' ? document.getElementById('anchor-target') : letterNode.parentElement.parentElement.parentElement.parentElement.previousElementSibling.querySelector('.js-article-anchor-target');
				console.log('target: ', target);
				target.scrollIntoView({ behavior: "smooth", block: "start" });
			});
		}
		$outer.append($anchor);
	});
};

var clearAnchors = function clearAnchors(prevSelector) {
	var $entries = Array.from(document.querySelectorAll(prevSelector));
	$entries.forEach(function (entry) {
		return entry.removeAttribute('name');
	});
};

var findFirstEntry = function findFirstEntry(char) {
	var selector = sortKey ? '.js-entry-title' : '.js-entry-artist';
	var prevSelector = !sortKey ? '.js-entry-title' : '.js-entry-artist';
	var $entries = Array.from(document.querySelectorAll(selector));

	clearAnchors(prevSelector);

	return $entries.find(function (entry) {
		var node = entry.nextElementSibling;
		return node.innerHTML[0] === char || node.innerHTML[0] === char.toUpperCase();
	});
};

var setAlphabetAnchors = function setAlphabetAnchors() {
	activeEntries = {};

	alphabet.forEach(function (char) {
		var firstEntry = findFirstEntry(char);

		if (firstEntry) {
			activeEntries[char] = 1;
			firstEntry.setAttribute('id', char);
		}
	});

	makeAlphabet();
};

var renderImages = function renderImages(images, $images) {
	images.forEach(function (image) {
		var src = '../../assets/images/' + image;
		var $img = document.createElement('IMG');
		$img.className = 'article-image';
		$img.src = src;
		$images.append($img);
	});
};

var renderEntries = function renderEntries() {
	var $articleList = document.getElementById('js-list');
	var entriesList = sortKey ? entries.byTitle : entries.byAuthor;

	$articleList.innerHTML = '';

	entriesList.forEach(function (entry) {
		var title = entry.title,
		    lastName = entry.lastName,
		    firstName = entry.firstName,
		    images = entry.images,
		    description = entry.description,
		    detail = entry.detail;


		$articleList.insertAdjacentHTML('beforeend', _articleTemplate2.default);

		var $imagesNodes = document.querySelectorAll('.article__images-inner');
		var $images = $imagesNodes[$imagesNodes.length - 1];

		if (images.length) renderImages(images, $images);

		var $descriptionOuter = document.createElement('div');
		var $descriptionNode = document.createElement('p');
		var $detailNode = document.createElement('p');
		$descriptionOuter.classList.add('article-description__outer');
		$descriptionNode.classList.add('article-description');
		$detailNode.classList.add('article-detail');

		$descriptionNode.innerHTML = description;
		$detailNode.innerHTML = detail;

		$descriptionOuter.append($descriptionNode, $detailNode);
		$images.append($descriptionOuter);

		var $titleNodes = document.querySelectorAll('.article-heading__title');
		var $title = $titleNodes[$titleNodes.length - 1];

		var $firstNodes = document.querySelectorAll('.article-heading__name--first');
		var $first = $firstNodes[$firstNodes.length - 1];

		var $lastNodes = document.querySelectorAll('.article-heading__name--last');
		var $last = $lastNodes[$lastNodes.length - 1];

		$title.innerHTML = title;
		$first.innerHTML = firstName;
		$last.innerHTML = lastName;
	});

	setAlphabetAnchors();
};

var sortByTitle = function sortByTitle() {
	entries.byTitle.sort(function (a, b) {
		var aTitle = a.title[0].toUpperCase();
		var bTitle = b.title[0].toUpperCase();
		if (aTitle > bTitle) return 1;else if (aTitle < bTitle) return -1;else return 0;
	});
};

var setData = function setData(data) {
	entries.byAuthor = data;
	entries.byTitle = data.slice();
	sortByTitle();
	renderEntries();
};

var fetchData = function fetchData() {
	fetch(DB).then(function (res) {
		return res.json();
	}).then(function (data) {
		setData(data);
	}).then(function () {
		attachImageListeners();
	}).catch(function (err) {
		return console.warn(err);
	});
};

var init = function init() {
	fetchData();
	(0, _navLg2.default)();
	makeAlphabet();
	addSortButtonListeners();
	attachArrowListeners();
	attachModalListeners();
};

init();

},{"./article-template":1,"./nav-lg":3}],3:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
var template = '<div class="nav__inner">\n\t\t<div class="nav__sort-by">\n\t\t\t<span class="sort-by__title">Sort by</span>\n\t\t\t<button class="sort-by__by-artist active" id="js-by-artist">Artist</button>\n\t\t\t<span class="sort-by__divider"> | </span>\n\t\t\t<button class="sort-by__by-title" id="js-by-title">Title</button>\n\t\t\t<span class="sort-by__divider find"> | </span>\n\t\t\t<span class="find" id="js-find">&#8984;F</span>\n\t\t</div>\n\t\t<div class="nav__alphabet">\n\t\t\t<span class="alphabet__title">Go to</span>\n\t\t\t<div class="alphabet__letters"></div>\n\t\t</div>\n\t</div>';

var navLg = function navLg() {
	var navOuter = document.getElementById('js-nav');
	navOuter.innerHTML = template;
};

exports.default = navLg;

},{}]},{},[2])

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvYXJ0aWNsZS10ZW1wbGF0ZS5qcyIsInNyYy9qcy9pbmRleC5qcyIsInNyYy9qcy9uYXYtbGcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQ0FBLElBQU0saXBCQUFOOztrQkFtQmUsZTs7Ozs7QUNuQmY7Ozs7QUFDQTs7Ozs7O0FBRUEsSUFBTSxLQUFLLCtGQUFYO0FBQ0EsSUFBTSxXQUFXLENBQUMsR0FBRCxFQUFNLEdBQU4sRUFBVyxHQUFYLEVBQWdCLEdBQWhCLEVBQXFCLEdBQXJCLEVBQTBCLEdBQTFCLEVBQStCLEdBQS9CLEVBQW9DLEdBQXBDLEVBQXlDLEdBQXpDLEVBQThDLEdBQTlDLEVBQW1ELEdBQW5ELEVBQXdELEdBQXhELEVBQTZELEdBQTdELEVBQWtFLEdBQWxFLEVBQXVFLEdBQXZFLEVBQTRFLEdBQTVFLEVBQWlGLEdBQWpGLEVBQXNGLEdBQXRGLEVBQTJGLEdBQTNGLEVBQWdHLEdBQWhHLEVBQXFHLEdBQXJHLEVBQTBHLEdBQTFHLENBQWpCOztBQUVBLElBQU0sT0FBTyxTQUFTLGNBQVQsQ0FBd0IsUUFBeEIsQ0FBYjtBQUNBLElBQU0sWUFBWSxTQUFTLGFBQVQsQ0FBdUIsV0FBdkIsQ0FBbEI7QUFDQSxJQUFNLFdBQVcsU0FBUyxhQUFULENBQXVCLFVBQXZCLENBQWpCO0FBQ0EsSUFBTSxTQUFTLFNBQVMsY0FBVCxDQUF3QixVQUF4QixDQUFmO0FBQ0EsSUFBTSxTQUFTLFNBQVMsYUFBVCxDQUF1QixRQUF2QixDQUFmO0FBQ0EsSUFBTSxTQUFTLFNBQVMsYUFBVCxDQUF1QixRQUF2QixDQUFmO0FBQ0EsSUFBTSxZQUFZLFNBQVMsYUFBVCxDQUF1QixXQUF2QixDQUFsQjtBQUNBLElBQU0sUUFBUSxTQUFTLGFBQVQsQ0FBdUIsZ0JBQXZCLENBQWQ7O0FBRUEsSUFBSSxVQUFVLENBQWQsQyxDQUFpQjtBQUNqQixJQUFJLFVBQVUs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QSxVQUFTLFNBQVQsR0FBcUIsUUFBckI7QUFDQSxDQUhEOztrQkFLZSxLIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCJjb25zdCBhcnRpY2xlVGVtcGxhdGUgPSBgXG5cdDxhcnRpY2xlIGNsYXNzPVwiYXJ0aWNsZV9fb3V0ZXJcIj5cblx0XHQ8ZGl2IGNsYXNzPVwiYXJ0aWNsZV9faW5uZXJcIj5cblx0XHRcdDxkaXYgY2xhc3M9XCJhcnRpY2xlX19oZWFkaW5nXCI+XG5cdFx0XHRcdDxhIGNsYXNzPVwianMtZW50cnktdGl0bGVcIj48L2E+XG5cdFx0XHRcdDxoMiBjbGFzcz1cImFydGljbGUtaGVhZGluZ19fdGl0bGVcIj48L2gyPlxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwiYXJ0aWNsZS1oZWFkaW5nX19uYW1lXCI+XG5cdFx0XHRcdFx0PHNwYW4gY2xhc3M9XCJhcnRpY2xlLWhlYWRpbmdfX25hbWUtLWZpcnN0XCI+PC9zcGFuPlxuXHRcdFx0XHRcdDxhIGNsYXNzPVwianMtZW50cnktYXJ0aXN0XCI+PC9hPlxuXHRcdFx0XHRcdDxzcGFuIGNsYXNzPVwiYXJ0aWNsZS1oZWFkaW5nX19uYW1lLS1sYXN0XCI+PC9zcGFuPlxuXHRcdFx0XHQ8L2Rpdj5cblx0XHRcdDwvZGl2Plx0XG5cdFx0XHQ8ZGl2IGNsYXNzPVwiYXJ0aWNsZV9faW1hZ2VzLW91dGVyXCI+XG5cdFx0XHRcdDxkaXYgY2xhc3M9XCJhcnRpY2xlX19pbWFnZXMtaW5uZXJcIj48L2Rpdj5cblx0XHRcdFx0PHAgY2xhc3M9XCJqcy1hcnRpY2xlLWFuY2hvci10YXJnZXRcIj48L3A+XG5cdFx0PC9kaXY+XG5cdDwvYXJ0aWNsZT5cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IGFydGljbGVUZW1wbGF0ZTsiLCJpbXBvcnQgbmF2TGcgZnJvbSAnLi9uYXYtbGcnO1xuaW1wb3J0IGFydGljbGVUZW1wbGF0ZSBmcm9tICcuL2FydGljbGUtdGVtcGxhdGUnO1xuXG5jb25zdCBEQiA9ICdodHRwczovL25leHVzLWNhdGFsb2cuZmlyZWJhc2Vpby5jb20vcG9zdHMuanNvbj9hdXRoPTdnN3B5S0t5a04zTjVld3JJbWhPYVM2dndyRnNjNWZLa3JrOGVqemYnO1xuY29uc3QgYWxwaGFiZXQgPSBbJ2EnLCAnYicsICdjJywgJ2QnLCAnZScsICdmJywgJ2cnLCAnaCcsICdqJywgJ2snLCAnbCcsICdtJywgJ24nLCAnbycsICdwJywgJ3InLCAncycsICd0JywgJ3UnLCAndicsICd3JywgJ3onXTtcblxuY29uc3QgJG5hdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdqcy1uYXYnKTtcbmNvbnN0ICRwYXJhbGxheCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wYXJhbGxheCcpO1xuY29uc3QgJGNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGVudCcpO1xuY29uc3QgJHRpdGxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2pzLXRpdGxlJyk7XG5jb25zdCAkYXJyb3cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYXJyb3cnKTtcbmNvbnN0ICRtb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbCcpO1xuY29uc3QgJGxpZ2h0Ym94ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmxpZ2h0Ym94Jyk7XG5jb25zdCAkdmlldyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5saWdodGJveC12aWV3Jyk7XG5cbmxldCBzb3J0S2V5ID0gMDsgLy8gMCA9IGFydGlzdCwgMSA9IHRpdGxlXG5sZXQgZW50cmllcyA9IHsgYnlBdXRob3I6IFtdLCBieVRpdGxlOiBbXSB9O1xubGV0IGFjdGl2ZUVudHJpZXMgPSB7fTtcblxubGV0IGxpZ2h0Ym94ID0gZmFsc2U7XG5jb25zdCBhdHRhY2hJbWFnZUxpc3RlbmVycyA9ICgpID0+IHtcblx0Y29uc3QgJGltYWdlcyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmFydGljbGUtaW1hZ2UnKSk7XG5cdGNvbnNvbGUubG9nKCdpbWFnZXM6ICcsICRpbWFnZXMpO1xuXG5cdCRpbWFnZXMuZm9yRWFjaChpbWcgPT4ge1xuXHRcdGltZy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcblx0XHRcdGNvbnNvbGUubG9nKCdjbGlrZWQgJywgaW1nLnNyYylcblx0XHRcdGxldCBzcmMgPSBpbWcuc3JjO1xuXHRcdFx0JGxpZ2h0Ym94LmNsYXNzTGlzdC5hZGQoJ3Nob3ctaW1nJyk7XG5cdFx0XHQkdmlldy5zZXRBdHRyaWJ1dGUoJ3N0eWxlJywgYGJhY2tncm91bmQtaW1hZ2U6IHVybCgke3NyY30pYCk7XG5cdFx0XHRsaWdodGJveCA9IHRydWU7XG5cdFx0fSlcblx0fSk7XG5cblx0JHZpZXcuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG5cdFx0aWYgKGxpZ2h0Ym94KSB7XG5cdFx0XHQkbGlnaHRib3guY2xhc3NMaXN0LnJlbW92ZSgnc2hvdy1pbWcnKTtcblx0XHRcdGxpZ2h0Ym94ID0gZmFsc2U7XG5cdFx0fVxuXHR9KTtcbn1cblxubGV0IG1vZGFsID0gZmFsc2U7XG5jb25zdCBhdHRhY2hNb2RhbExpc3RlbmVycyA9ICgpID0+IHtcblx0Y29uc3QgJGZpbmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnanMtZmluZCcpO1xuXHRcblx0JGZpbmQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG5cdFx0JG1vZGFsLmNsYXNzTGlzdC5hZGQoJ3Nob3cnKTtcblx0XHRtb2RhbCA9IHRydWU7XG5cdH0pO1xuXG5cdCRtb2RhbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcblx0XHRzZXRUaW1lb3V0KCgpID0+IHtcblx0XHRcdCRtb2RhbC5jbGFzc0xpc3QucmVtb3ZlKCdzaG93Jyk7XG5cdFx0XHRtb2RhbCA9IGZhbHNlO1xuXHRcdH0sIDUwMCk7XG5cdH0pO1xuXG5cdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKCkgPT4ge1xuXHRcdC8vIHByZXZlbnREZWZhdWx0KCk7XG5cdFx0Y29uc29sZS5sb2coJ2tleWRvd24nKTtcblx0XHRpZiAobW9kYWwpIHtcblx0XHRcdCRtb2RhbC5jbGFzc0xpc3QucmVtb3ZlKCdzaG93Jyk7XG5cdFx0XHRtb2RhbCA9IGZhbHNlO1xuXHRcdH1cblx0fSk7XG59XG5cbmNvbnN0IHNjcm9sbFRvVG9wID0gKCkgPT4ge1xuXHRsZXQgdGhpbmcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYW5jaG9yLXRhcmdldCcpO1xuXHR0aGluZy5zY3JvbGxJbnRvVmlldyh7YmVoYXZpb3I6IFwic21vb3RoXCIsIGJsb2NrOiBcInN0YXJ0XCJ9KTtcbn1cblxubGV0IHByZXY7XG5sZXQgY3VycmVudCA9IDA7XG5sZXQgaXNTaG93aW5nID0gZmFsc2U7XG5jb25zdCBhdHRhY2hBcnJvd0xpc3RlbmVycyA9ICgpID0+IHtcblx0JGFycm93LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuXHRcdHNjcm9sbFRvVG9wKCk7XG5cdH0pO1xuXG5cdCRwYXJhbGxheC5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCAoKSA9PiB7XG5cblx0XHRsZXQgeSA9ICR0aXRsZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS55O1xuXHRcdGlmIChjdXJyZW50ICE9PSB5KSB7XG5cdFx0XHRwcmV2ID0gY3VycmVudDtcblx0XHRcdGN1cnJlbnQgPSB5O1xuXHRcdH1cblxuXHRcdGlmICh5IDw9IC01MCAmJiAhaXNTaG93aW5nKSB7XG5cdFx0XHQkYXJyb3cuY2xhc3NMaXN0LmFkZCgnc2hvdycpO1xuXHRcdFx0aXNTaG93aW5nID0gdHJ1ZTtcblx0XHR9IGVsc2UgaWYgKHkgPiAtNTAgJiYgaXNTaG93aW5nKSB7XG5cdFx0XHQkYXJyb3cuY2xhc3NMaXN0LnJlbW92ZSgnc2hvdycpO1xuXHRcdFx0aXNTaG93aW5nID0gZmFsc2U7XG5cdFx0fVxuXHR9KTtcbn07XG5cbmNvbnN0IGFkZFNvcnRCdXR0b25MaXN0ZW5lcnMgPSAoKSA9PiB7XG5cdGxldCAkYnlBcnRpc3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnanMtYnktYXJ0aXN0Jyk7XG5cdGxldCAkYnlUaXRsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdqcy1ieS10aXRsZScpO1xuXHQkYnlBcnRpc3QuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG5cdFx0c2Nyb2xsVG9Ub3AoKTtcblx0XHRpZiAoc29ydEtleSkge1xuXHRcdFx0c29ydEtleSA9IDA7XG5cdFx0XHQkYnlBcnRpc3QuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG5cdFx0XHQkYnlUaXRsZS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcblx0XHRcdHJlbmRlckVudHJpZXMoKTtcblx0XHR9XG5cdH0pO1xuXG5cdCRieVRpdGxlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuXHRcdHNjcm9sbFRvVG9wKCk7XG5cdFx0aWYgKCFzb3J0S2V5KSB7XG5cdFx0XHRzb3J0S2V5ID0gMTtcblx0XHRcdCRieVRpdGxlLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xuXHRcdFx0JGJ5QXJ0aXN0LmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xuXHRcdFx0cmVuZGVyRW50cmllcygpO1xuXHRcdH1cblx0fSk7XG59O1xuXG5jb25zdCBtYWtlQWxwaGFiZXQgPSAoKSA9PiB7XG5cdGxldCAkb3V0ZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWxwaGFiZXRfX2xldHRlcnMnKTtcblx0JG91dGVyLmlubmVySFRNTCA9ICcnO1xuXG5cdGFscGhhYmV0LmZvckVhY2gobGV0dGVyID0+IHtcblx0XHRsZXQgJGFuY2hvciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcblxuXHRcdCRhbmNob3IuaW5uZXJIVE1MID0gbGV0dGVyLnRvVXBwZXJDYXNlKCk7XG5cdFx0JGFuY2hvci5jbGFzc05hbWUgPSAnYWxwaGFiZXRfX2xldHRlci1hbmNob3InO1xuXHRcdGlmIChhY3RpdmVFbnRyaWVzW2xldHRlcl0pIHtcblx0XHRcdCRhbmNob3IuY2xhc3NMaXN0LmFkZCgndS1hY3RpdmUnKTtcblx0XHRcdCRhbmNob3IuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG5cdFx0XHRcdGNvbnN0IGxldHRlck5vZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChsZXR0ZXIpO1xuXHRcdFx0XHRjb25zdCB0YXJnZXQgPSBsZXR0ZXIgPT09ICdhJyA/IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhbmNob3ItdGFyZ2V0JykgOiBsZXR0ZXJOb2RlLnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQucHJldmlvdXNFbGVtZW50U2libGluZy5xdWVyeVNlbGVjdG9yKCcuanMtYXJ0aWNsZS1hbmNob3ItdGFyZ2V0Jyk7XG5cdFx0XHRcdGNvbnNvbGUubG9nKCd0YXJnZXQ6ICcsIHRhcmdldCk7XG5cdFx0XHRcdHRhcmdldC5zY3JvbGxJbnRvVmlldyh7YmVoYXZpb3I6IFwic21vb3RoXCIsIGJsb2NrOiBcInN0YXJ0XCJ9KTtcblx0XHRcdH0pXG5cdFx0fVxuXHRcdCRvdXRlci5hcHBlbmQoJGFuY2hvcik7XG5cdH0pO1xufTtcblxuY29uc3QgY2xlYXJBbmNob3JzID0gKHByZXZTZWxlY3RvcikgPT4ge1xuXHRsZXQgJGVudHJpZXMgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwocHJldlNlbGVjdG9yKSk7XG5cdCRlbnRyaWVzLmZvckVhY2goZW50cnkgPT4gZW50cnkucmVtb3ZlQXR0cmlidXRlKCduYW1lJykpO1xufTtcblxuY29uc3QgZmluZEZpcnN0RW50cnkgPSAoY2hhcikgPT4ge1xuXHRsZXQgc2VsZWN0b3IgPSBzb3J0S2V5ID8gJy5qcy1lbnRyeS10aXRsZScgOiAnLmpzLWVudHJ5LWFydGlzdCc7XG5cdGxldCBwcmV2U2VsZWN0b3IgPSAhc29ydEtleSA/ICcuanMtZW50cnktdGl0bGUnIDogJy5qcy1lbnRyeS1hcnRpc3QnO1xuXHRsZXQgJGVudHJpZXMgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpKTtcblxuXHRjbGVhckFuY2hvcnMocHJldlNlbGVjdG9yKTtcblxuXHRyZXR1cm4gJGVudHJpZXMuZmluZChlbnRyeSA9PiB7XG5cdFx0bGV0IG5vZGUgPSBlbnRyeS5uZXh0RWxlbWVudFNpYmxpbmc7XG5cdFx0cmV0dXJuIG5vZGUuaW5uZXJIVE1MWzBdID09PSBjaGFyIHx8IG5vZGUuaW5uZXJIVE1MWzBdID09PSBjaGFyLnRvVXBwZXJDYXNlKCk7XG5cdH0pO1xufTtcblxuY29uc3Qgc2V0QWxwaGFiZXRBbmNob3JzID0gKCkgPT4ge1xuXHRhY3RpdmVFbnRyaWVzID0ge307XG5cblx0YWxwaGFiZXQuZm9yRWFjaChjaGFyID0+IHtcblx0XHRsZXQgZmlyc3RFbnRyeSA9IGZpbmRGaXJzdEVudHJ5KGNoYXIpO1xuXG5cdFx0aWYgKGZpcnN0RW50cnkpIHtcblx0XHRcdGFjdGl2ZUVudHJpZXNbY2hhcl0gPSAxO1xuXHRcdFx0Zmlyc3RFbnRyeS5zZXRBdHRyaWJ1dGUoJ2lkJywgY2hhcik7XG5cdFx0fVxuXHR9KTtcblxuXHRtYWtlQWxwaGFiZXQoKTtcbn07XG5cbmNvbnN0IHJlbmRlckltYWdlcyA9IChpbWFnZXMsICRpbWFnZXMpID0+IHtcblx0aW1hZ2VzLmZvckVhY2goaW1hZ2UgPT4ge1xuXHRcdGNvbnN0IHNyYyA9IGAuLi8uLi9hc3NldHMvaW1hZ2VzLyR7aW1hZ2V9YDtcblx0XHRsZXQgJGltZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ0lNRycpO1xuXHRcdCRpbWcuY2xhc3NOYW1lID0gJ2FydGljbGUtaW1hZ2UnO1xuXHRcdCRpbWcuc3JjID0gc3JjO1xuXHRcdCRpbWFnZXMuYXBwZW5kKCRpbWcpO1xuXHR9KVxufTtcblxuY29uc3QgcmVuZGVyRW50cmllcyA9ICgpID0+IHtcblx0bGV0ICRhcnRpY2xlTGlzdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdqcy1saXN0Jyk7XG5cdGxldCBlbnRyaWVzTGlzdCA9IHNvcnRLZXkgPyBlbnRyaWVzLmJ5VGl0bGUgOiBlbnRyaWVzLmJ5QXV0aG9yO1xuXG5cdCRhcnRpY2xlTGlzdC5pbm5lckhUTUwgPSAnJztcblxuXHRlbnRyaWVzTGlzdC5mb3JFYWNoKGVudHJ5ID0+IHtcblx0XHRsZXQgeyB0aXRsZSwgbGFzdE5hbWUsIGZpcnN0TmFtZSwgaW1hZ2VzLCBkZXNjcmlwdGlvbiwgZGV0YWlsIH0gPSBlbnRyeTtcblxuXHRcdCRhcnRpY2xlTGlzdC5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcsIGFydGljbGVUZW1wbGF0ZSk7XG5cblx0XHRsZXQgJGltYWdlc05vZGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmFydGljbGVfX2ltYWdlcy1pbm5lcicpO1xuXHRcdGxldCAkaW1hZ2VzID0gJGltYWdlc05vZGVzWyRpbWFnZXNOb2Rlcy5sZW5ndGggLSAxXTtcblxuXHRcdGlmIChpbWFnZXMubGVuZ3RoKSByZW5kZXJJbWFnZXMoaW1hZ2VzLCAkaW1hZ2VzKTtcblx0XHRcblx0XHRsZXQgJGRlc2NyaXB0aW9uT3V0ZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblx0XHRsZXQgJGRlc2NyaXB0aW9uTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcblx0XHRsZXQgJGRldGFpbE5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG5cdFx0JGRlc2NyaXB0aW9uT3V0ZXIuY2xhc3NMaXN0LmFkZCgnYXJ0aWNsZS1kZXNjcmlwdGlvbl9fb3V0ZXInKTtcblx0XHQkZGVzY3JpcHRpb25Ob2RlLmNsYXNzTGlzdC5hZGQoJ2FydGljbGUtZGVzY3JpcHRpb24nKTtcblx0XHQkZGV0YWlsTm9kZS5jbGFzc0xpc3QuYWRkKCdhcnRpY2xlLWRldGFpbCcpO1xuXG5cdFx0JGRlc2NyaXB0aW9uTm9kZS5pbm5lckhUTUwgPSBkZXNjcmlwdGlvbjtcblx0XHQkZGV0YWlsTm9kZS5pbm5lckhUTUwgPSBkZXRhaWw7XG5cblx0XHQkZGVzY3JpcHRpb25PdXRlci5hcHBlbmQoJGRlc2NyaXB0aW9uTm9kZSwgJGRldGFpbE5vZGUpO1xuXHRcdCRpbWFnZXMuYXBwZW5kKCRkZXNjcmlwdGlvbk91dGVyKTtcblxuXHRcdGxldCAkdGl0bGVOb2RlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5hcnRpY2xlLWhlYWRpbmdfX3RpdGxlJyk7XG5cdFx0bGV0ICR0aXRsZSA9ICR0aXRsZU5vZGVzWyR0aXRsZU5vZGVzLmxlbmd0aCAtIDFdO1xuXG5cdFx0bGV0ICRmaXJzdE5vZGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmFydGljbGUtaGVhZGluZ19fbmFtZS0tZmlyc3QnKTtcblx0XHRsZXQgJGZpcnN0ID0gJGZpcnN0Tm9kZXNbJGZpcnN0Tm9kZXMubGVuZ3RoIC0gMV07XG5cblx0XHRsZXQgJGxhc3ROb2RlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5hcnRpY2xlLWhlYWRpbmdfX25hbWUtLWxhc3QnKTtcblx0XHRsZXQgJGxhc3QgPSAkbGFzdE5vZGVzWyRsYXN0Tm9kZXMubGVuZ3RoIC0gMV07XG5cblx0XHQkdGl0bGUuaW5uZXJIVE1MID0gdGl0bGU7XG5cdFx0JGZpcnN0LmlubmVySFRNTCA9IGZpcnN0TmFtZTtcblx0XHQkbGFzdC5pbm5lckhUTUwgPSBsYXN0TmFtZTtcblxuXHR9KTtcblxuXHRzZXRBbHBoYWJldEFuY2hvcnMoKTtcbn07XG5cbmNvbnN0IHNvcnRCeVRpdGxlID0gKCkgPT4ge1xuXHRlbnRyaWVzLmJ5VGl0bGUuc29ydCgoYSwgYikgPT4ge1xuXHRcdGxldCBhVGl0bGUgPSBhLnRpdGxlWzBdLnRvVXBwZXJDYXNlKCk7XG5cdFx0bGV0IGJUaXRsZSA9IGIudGl0bGVbMF0udG9VcHBlckNhc2UoKTtcblx0XHRpZiAoYVRpdGxlID4gYlRpdGxlKSByZXR1cm4gMTtcblx0XHRlbHNlIGlmIChhVGl0bGUgPCBiVGl0bGUpIHJldHVybiAtMTtcblx0XHRlbHNlIHJldHVybiAwO1xuXHR9KTtcbn07XG5cbmNvbnN0IHNldERhdGEgPSAoZGF0YSkgPT4ge1xuXHRlbnRyaWVzLmJ5QXV0aG9yID0gZGF0YTtcblx0ZW50cmllcy5ieVRpdGxlID0gZGF0YS5zbGljZSgpO1xuXHRzb3J0QnlUaXRsZSgpO1xuXHRyZW5kZXJFbnRyaWVzKCk7XG59XG5cbmNvbnN0IGZldGNoRGF0YSA9ICgpID0+IHtcblx0XHRmZXRjaChEQikudGhlbihyZXMgPT5cblx0XHRcdHJlcy5qc29uKClcblx0XHQpLnRoZW4oZGF0YSA9PiB7XG5cdFx0XHRzZXREYXRhKGRhdGEpO1xuXHRcdH0pXG5cdFx0LnRoZW4oKCkgPT4ge1xuXHRcdFx0YXR0YWNoSW1hZ2VMaXN0ZW5lcnMoKTtcblx0XHR9KVxuXHRcdC5jYXRjaChlcnIgPT4gY29uc29sZS53YXJuKGVycikpO1xufTtcblxuY29uc3QgaW5pdCA9ICgpID0+IHtcblx0ZmV0Y2hEYXRhKCk7XG5cdG5hdkxnKCk7XG5cdG1ha2VBbHBoYWJldCgpO1xuXHRhZGRTb3J0QnV0dG9uTGlzdGVuZXJzKCk7XG5cdGF0dGFjaEFycm93TGlzdGVuZXJzKCk7XG5cdGF0dGFjaE1vZGFsTGlzdGVuZXJzKCk7XG59XG5cbmluaXQoKTtcbiIsImNvbnN0IHRlbXBsYXRlID0gXG5cdGA8ZGl2IGNsYXNzPVwibmF2X19pbm5lclwiPlxuXHRcdDxkaXYgY2xhc3M9XCJuYXZfX3NvcnQtYnlcIj5cblx0XHRcdDxzcGFuIGNsYXNzPVwic29ydC1ieV9fdGl0bGVcIj5Tb3J0IGJ5PC9zcGFuPlxuXHRcdFx0PGJ1dHRvbiBjbGFzcz1cInNvcnQtYnlfX2J5LWFydGlzdCBhY3RpdmVcIiBpZD1cImpzLWJ5LWFydGlzdFwiPkFydGlzdDwvYnV0dG9uPlxuXHRcdFx0PHNwYW4gY2xhc3M9XCJzb3J0LWJ5X19kaXZpZGVyXCI+IHwgPC9zcGFuPlxuXHRcdFx0PGJ1dHRvbiBjbGFzcz1cInNvcnQtYnlfX2J5LXRpdGxlXCIgaWQ9XCJqcy1ieS10aXRsZVwiPlRpdGxlPC9idXR0b24+XG5cdFx0XHQ8c3BhbiBjbGFzcz1cInNvcnQtYnlfX2RpdmlkZXIgZmluZFwiPiB8IDwvc3Bhbj5cblx0XHRcdDxzcGFuIGNsYXNzPVwiZmluZFwiIGlkPVwianMtZmluZFwiPiYjODk4NDtGPC9zcGFuPlxuXHRcdDwvZGl2PlxuXHRcdDxkaXYgY2xhc3M9XCJuYXZfX2FscGhhYmV0XCI+XG5cdFx0XHQ8c3BhbiBjbGFzcz1cImFscGhhYmV0X190aXRsZVwiPkdvIHRvPC9zcGFuPlxuXHRcdFx0PGRpdiBjbGFzcz1cImFscGhhYmV0X19sZXR0ZXJzXCI+PC9kaXY+XG5cdFx0PC9kaXY+XG5cdDwvZGl2PmA7XG5cbmNvbnN0IG5hdkxnID0gKCkgPT4ge1xuXHRsZXQgbmF2T3V0ZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnanMtbmF2Jyk7XG5cdG5hdk91dGVyLmlubmVySFRNTCA9IHRlbXBsYXRlO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgbmF2TGc7Il0sInByZUV4aXN0aW5nQ29tbWVudCI6Ii8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltNXZaR1ZmYlc5a2RXeGxjeTlpY205M2MyVnlMWEJoWTJzdlgzQnlaV3gxWkdVdWFuTWlMQ0p6Y21NdmFuTXZZWEowYVdOc1pTMTBaVzF3YkdGMFpTNXFjeUlzSW5OeVl5OXFjeTlwYm1SbGVDNXFjeUlzSW5OeVl5OXFjeTl1WVhZdGJHY3Vhbk1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFN096czdPenRCUTBGQkxFbEJRVTBzYVhCQ1FVRk9PenRyUWtGdFFtVXNaVHM3T3pzN1FVTnVRbVk3T3pzN1FVRkRRVHM3T3pzN08wRkJSVUVzU1VGQlRTeExRVUZMTEN0R1FVRllPMEZCUTBFc1NVRkJUU3hYUVVGWExFTkJRVU1zUjBGQlJDeEZRVUZOTEVkQlFVNHNSVUZCVnl4SFFVRllMRVZCUVdkQ0xFZEJRV2hDTEVWQlFYRkNMRWRCUVhKQ0xFVkJRVEJDTEVkQlFURkNMRVZCUVN0Q0xFZEJRUzlDTEVWQlFXOURMRWRCUVhCRExFVkJRWGxETEVkQlFYcERMRVZCUVRoRExFZEJRVGxETEVWQlFXMUVMRWRCUVc1RUxFVkJRWGRFTEVkQlFYaEVMRVZCUVRaRUxFZEJRVGRFTEVWQlFXdEZMRWRCUVd4RkxFVkJRWFZGTEVkQlFYWkZMRVZCUVRSRkxFZEJRVFZGTEVWQlFXbEdMRWRCUVdwR0xFVkJRWE5HTEVkQlFYUkdMRVZCUVRKR0xFZEJRVE5HTEVWQlFXZEhMRWRCUVdoSExFVkJRWEZITEVkQlFYSkhMRVZCUVRCSExFZEJRVEZITEVOQlFXcENPenRCUVVWQkxFbEJRVTBzVDBGQlR5eFRRVUZUTEdOQlFWUXNRMEZCZDBJc1VVRkJlRUlzUTBGQllqdEJRVU5CTEVsQlFVMHNXVUZCV1N4VFFVRlRMR0ZCUVZRc1EwRkJkVUlzVjBGQmRrSXNRMEZCYkVJN1FVRkRRU3hKUVVGTkxGZEJRVmNzVTBGQlV5eGhRVUZVTEVOQlFYVkNMRlZCUVhaQ0xFTkJRV3BDTzBGQlEwRXNTVUZCVFN4VFFVRlRMRk5CUVZNc1kwRkJWQ3hEUVVGM1FpeFZRVUY0UWl4RFFVRm1PMEZCUTBFc1NVRkJUU3hUUVVGVExGTkJRVk1zWVVGQlZDeERRVUYxUWl4UlFVRjJRaXhEUVVGbU8wRkJRMEVzU1VGQlRTeFRRVUZUTEZOQlFWTXNZVUZCVkN4RFFVRjFRaXhSUVVGMlFpeERRVUZtTzBGQlEwRXNTVUZCVFN4WlFVRlpMRk5CUVZNc1lVRkJWQ3hEUVVGMVFpeFhRVUYyUWl4RFFVRnNRanRCUVVOQkxFbEJRVTBzVVVGQlVTeFRRVUZUTEdGQlFWUXNRMEZCZFVJc1owSkJRWFpDTEVOQlFXUTdPMEZCUlVFc1NVRkJTU3hWUVVGVkxFTkJRV1FzUXl4RFFVRnBRanRCUVVOcVFpeEpRVUZKTEZWQlFWVXNSVUZCUlN4VlFVRlZMRVZCUVZvc1JVRkJaMElzVTBGQlV5eEZRVUY2UWl4RlFVRmtPMEZCUTBFc1NVRkJTU3huUWtGQlowSXNSVUZCY0VJN08wRkJSVUVzU1VGQlNTeFhRVUZYTEV0QlFXWTdRVUZEUVN4SlFVRk5MSFZDUVVGMVFpeFRRVUYyUWl4dlFrRkJkVUlzUjBGQlRUdEJRVU5zUXl4TFFVRk5MRlZCUVZVc1RVRkJUU3hKUVVGT0xFTkJRVmNzVTBGQlV5eG5Ra0ZCVkN4RFFVRXdRaXhuUWtGQk1VSXNRMEZCV0N4RFFVRm9RanRCUVVOQkxGTkJRVkVzUjBGQlVpeERRVUZaTEZWQlFWb3NSVUZCZDBJc1QwRkJlRUk3TzBGQlJVRXNVMEZCVVN4UFFVRlNMRU5CUVdkQ0xHVkJRVTg3UVVGRGRFSXNUVUZCU1N4blFrRkJTaXhEUVVGeFFpeFBRVUZ5UWl4RlFVRTRRaXhaUVVGTk8wRkJRMjVETEZkQlFWRXNSMEZCVWl4RFFVRlpMRk5CUVZvc1JVRkJkVUlzU1VGQlNTeEhRVUV6UWp0QlFVTkJMRTlCUVVrc1RVRkJUU3hKUVVGSkxFZEJRV1E3UVVGRFFTeGhRVUZWTEZOQlFWWXNRMEZCYjBJc1IwRkJjRUlzUTBGQmQwSXNWVUZCZUVJN1FVRkRRU3hUUVVGTkxGbEJRVTRzUTBGQmJVSXNUMEZCYmtJc05rSkJRWEZFTEVkQlFYSkVPMEZCUTBFc1kwRkJWeXhKUVVGWU8wRkJRMEVzUjBGT1JEdEJRVTlCTEVWQlVrUTdPMEZCVlVFc1QwRkJUU3huUWtGQlRpeERRVUYxUWl4UFFVRjJRaXhGUVVGblF5eFpRVUZOTzBGQlEzSkRMRTFCUVVrc1VVRkJTaXhGUVVGak8wRkJRMklzWVVGQlZTeFRRVUZXTEVOQlFXOUNMRTFCUVhCQ0xFTkJRVEpDTEZWQlFUTkNPMEZCUTBFc1kwRkJWeXhMUVVGWU8wRkJRMEU3UVVGRFJDeEZRVXhFTzBGQlRVRXNRMEZ3UWtRN08wRkJjMEpCTEVsQlFVa3NVVUZCVVN4TFFVRmFPMEZCUTBFc1NVRkJUU3gxUWtGQmRVSXNVMEZCZGtJc2IwSkJRWFZDTEVkQlFVMDdRVUZEYkVNc1MwRkJUU3hSUVVGUkxGTkJRVk1zWTBGQlZDeERRVUYzUWl4VFFVRjRRaXhEUVVGa096dEJRVVZCTEU5QlFVMHNaMEpCUVU0c1EwRkJkVUlzVDBGQmRrSXNSVUZCWjBNc1dVRkJUVHRCUVVOeVF5eFRRVUZQTEZOQlFWQXNRMEZCYVVJc1IwRkJha0lzUTBGQmNVSXNUVUZCY2tJN1FVRkRRU3hWUVVGUkxFbEJRVkk3UVVGRFFTeEZRVWhFT3p0QlFVdEJMRkZCUVU4c1owSkJRVkFzUTBGQmQwSXNUMEZCZUVJc1JVRkJhVU1zV1VGQlRUdEJRVU4wUXl4aFFVRlhMRmxCUVUwN1FVRkRhRUlzVlVGQlR5eFRRVUZRTEVOQlFXbENMRTFCUVdwQ0xFTkJRWGRDTEUxQlFYaENPMEZCUTBFc1YwRkJVU3hMUVVGU08wRkJRMEVzUjBGSVJDeEZRVWRITEVkQlNFZzdRVUZKUVN4RlFVeEVPenRCUVU5QkxGRkJRVThzWjBKQlFWQXNRMEZCZDBJc1UwRkJlRUlzUlVGQmJVTXNXVUZCVFR0QlFVTjRRenRCUVVOQkxGVkJRVkVzUjBGQlVpeERRVUZaTEZOQlFWbzdRVUZEUVN4TlFVRkpMRXRCUVVvc1JVRkJWenRCUVVOV0xGVkJRVThzVTBGQlVDeERRVUZwUWl4TlFVRnFRaXhEUVVGM1FpeE5RVUY0UWp0QlFVTkJMRmRCUVZFc1MwRkJVanRCUVVOQk8wRkJRMFFzUlVGUVJEdEJRVkZCTEVOQmRrSkVPenRCUVhsQ1FTeEpRVUZOTEdOQlFXTXNVMEZCWkN4WFFVRmpMRWRCUVUwN1FVRkRla0lzUzBGQlNTeFJRVUZSTEZOQlFWTXNZMEZCVkN4RFFVRjNRaXhsUVVGNFFpeERRVUZhTzBGQlEwRXNUMEZCVFN4alFVRk9MRU5CUVhGQ0xFVkJRVU1zVlVGQlZTeFJRVUZZTEVWQlFYRkNMRTlCUVU4c1QwRkJOVUlzUlVGQmNrSTdRVUZEUVN4RFFVaEVPenRCUVV0QkxFbEJRVWtzWVVGQlNqdEJRVU5CTEVsQlFVa3NWVUZCVlN4RFFVRmtPMEZCUTBFc1NVRkJTU3haUVVGWkxFdEJRV2hDTzBGQlEwRXNTVUZCVFN4MVFrRkJkVUlzVTBGQmRrSXNiMEpCUVhWQ0xFZEJRVTA3UVVGRGJFTXNVVUZCVHl4blFrRkJVQ3hEUVVGM1FpeFBRVUY0UWl4RlFVRnBReXhaUVVGTk8wRkJRM1JETzBGQlEwRXNSVUZHUkRzN1FVRkpRU3hYUVVGVkxHZENRVUZXTEVOQlFUSkNMRkZCUVROQ0xFVkJRWEZETEZsQlFVMDdPMEZCUlRGRExFMUJRVWtzU1VGQlNTeFBRVUZQTEhGQ1FVRlFMRWRCUVN0Q0xFTkJRWFpETzBGQlEwRXNUVUZCU1N4WlFVRlpMRU5CUVdoQ0xFVkJRVzFDTzBGQlEyeENMRlZCUVU4c1QwRkJVRHRCUVVOQkxHRkJRVlVzUTBGQlZqdEJRVU5CT3p0QlFVVkVMRTFCUVVrc1MwRkJTeXhEUVVGRExFVkJRVTRzU1VGQldTeERRVUZETEZOQlFXcENMRVZCUVRSQ08wRkJRek5DTEZWQlFVOHNVMEZCVUN4RFFVRnBRaXhIUVVGcVFpeERRVUZ4UWl4TlFVRnlRanRCUVVOQkxHVkJRVmtzU1VGQldqdEJRVU5CTEVkQlNFUXNUVUZIVHl4SlFVRkpMRWxCUVVrc1EwRkJReXhGUVVGTUxFbEJRVmNzVTBGQlppeEZRVUV3UWp0QlFVTm9ReXhWUVVGUExGTkJRVkFzUTBGQmFVSXNUVUZCYWtJc1EwRkJkMElzVFVGQmVFSTdRVUZEUVN4bFFVRlpMRXRCUVZvN1FVRkRRVHRCUVVORUxFVkJaa1E3UVVGblFrRXNRMEZ5UWtRN08wRkJkVUpCTEVsQlFVMHNlVUpCUVhsQ0xGTkJRWHBDTEhOQ1FVRjVRaXhIUVVGTk8wRkJRM0JETEV0QlFVa3NXVUZCV1N4VFFVRlRMR05CUVZRc1EwRkJkMElzWTBGQmVFSXNRMEZCYUVJN1FVRkRRU3hMUVVGSkxGZEJRVmNzVTBGQlV5eGpRVUZVTEVOQlFYZENMR0ZCUVhoQ0xFTkJRV1k3UVVGRFFTeFhRVUZWTEdkQ1FVRldMRU5CUVRKQ0xFOUJRVE5DTEVWQlFXOURMRmxCUVUwN1FVRkRla003UVVGRFFTeE5RVUZKTEU5QlFVb3NSVUZCWVR0QlFVTmFMR0ZCUVZVc1EwRkJWanRCUVVOQkxHRkJRVlVzVTBGQlZpeERRVUZ2UWl4SFFVRndRaXhEUVVGM1FpeFJRVUY0UWp0QlFVTkJMRmxCUVZNc1UwRkJWQ3hEUVVGdFFpeE5RVUZ1UWl4RFFVRXdRaXhSUVVFeFFqdEJRVU5CTzBGQlEwRTdRVUZEUkN4RlFWSkVPenRCUVZWQkxGVkJRVk1zWjBKQlFWUXNRMEZCTUVJc1QwRkJNVUlzUlVGQmJVTXNXVUZCVFR0QlFVTjRRenRCUVVOQkxFMUJRVWtzUTBGQlF5eFBRVUZNTEVWQlFXTTdRVUZEWWl4aFFVRlZMRU5CUVZZN1FVRkRRU3haUVVGVExGTkJRVlFzUTBGQmJVSXNSMEZCYmtJc1EwRkJkVUlzVVVGQmRrSTdRVUZEUVN4aFFVRlZMRk5CUVZZc1EwRkJiMElzVFVGQmNFSXNRMEZCTWtJc1VVRkJNMEk3UVVGRFFUdEJRVU5CTzBGQlEwUXNSVUZTUkR0QlFWTkJMRU5CZEVKRU96dEJRWGRDUVN4SlFVRk5MR1ZCUVdVc1UwRkJaaXhaUVVGbExFZEJRVTA3UVVGRE1VSXNTMEZCU1N4VFFVRlRMRk5CUVZNc1lVRkJWQ3hEUVVGMVFpeHZRa0ZCZGtJc1EwRkJZanRCUVVOQkxGRkJRVThzVTBGQlVDeEhRVUZ0UWl4RlFVRnVRanM3UVVGRlFTeFZRVUZUTEU5QlFWUXNRMEZCYVVJc2EwSkJRVlU3UVVGRE1VSXNUVUZCU1N4VlFVRlZMRk5CUVZNc1lVRkJWQ3hEUVVGMVFpeEhRVUYyUWl4RFFVRmtPenRCUVVWQkxGVkJRVkVzVTBGQlVpeEhRVUZ2UWl4UFFVRlBMRmRCUVZBc1JVRkJjRUk3UVVGRFFTeFZRVUZSTEZOQlFWSXNSMEZCYjBJc2VVSkJRWEJDTzBGQlEwRXNUVUZCU1N4alFVRmpMRTFCUVdRc1EwRkJTaXhGUVVFeVFqdEJRVU14UWl4WFFVRlJMRk5CUVZJc1EwRkJhMElzUjBGQmJFSXNRMEZCYzBJc1ZVRkJkRUk3UVVGRFFTeFhRVUZSTEdkQ1FVRlNMRU5CUVhsQ0xFOUJRWHBDTEVWQlFXdERMRmxCUVUwN1FVRkRka01zVVVGQlRTeGhRVUZoTEZOQlFWTXNZMEZCVkN4RFFVRjNRaXhOUVVGNFFpeERRVUZ1UWp0QlFVTkJMRkZCUVUwc1UwRkJVeXhYUVVGWExFZEJRVmdzUjBGQmFVSXNVMEZCVXl4alFVRlVMRU5CUVhkQ0xHVkJRWGhDTEVOQlFXcENMRWRCUVRSRUxGZEJRVmNzWVVGQldDeERRVUY1UWl4aFFVRjZRaXhEUVVGMVF5eGhRVUYyUXl4RFFVRnhSQ3hoUVVGeVJDeERRVUZ0UlN4elFrRkJia1VzUTBGQk1FWXNZVUZCTVVZc1EwRkJkMGNzTWtKQlFYaEhMRU5CUVRORk8wRkJRMEVzV1VGQlVTeEhRVUZTTEVOQlFWa3NWVUZCV2l4RlFVRjNRaXhOUVVGNFFqdEJRVU5CTEZkQlFVOHNZMEZCVUN4RFFVRnpRaXhGUVVGRExGVkJRVlVzVVVGQldDeEZRVUZ4UWl4UFFVRlBMRTlCUVRWQ0xFVkJRWFJDTzBGQlEwRXNTVUZNUkR0QlFVMUJPMEZCUTBRc1UwRkJUeXhOUVVGUUxFTkJRV01zVDBGQlpEdEJRVU5CTEVWQlprUTdRVUZuUWtFc1EwRndRa1E3TzBGQmMwSkJMRWxCUVUwc1pVRkJaU3hUUVVGbUxGbEJRV1VzUTBGQlF5eFpRVUZFTEVWQlFXdENPMEZCUTNSRExFdEJRVWtzVjBGQlZ5eE5RVUZOTEVsQlFVNHNRMEZCVnl4VFFVRlRMR2RDUVVGVUxFTkJRVEJDTEZsQlFURkNMRU5CUVZnc1EwRkJaanRCUVVOQkxGVkJRVk1zVDBGQlZDeERRVUZwUWp0QlFVRkJMRk5CUVZNc1RVRkJUU3hsUVVGT0xFTkJRWE5DTEUxQlFYUkNMRU5CUVZRN1FVRkJRU3hGUVVGcVFqdEJRVU5CTEVOQlNFUTdPMEZCUzBFc1NVRkJUU3hwUWtGQmFVSXNVMEZCYWtJc1kwRkJhVUlzUTBGQlF5eEpRVUZFTEVWQlFWVTdRVUZEYUVNc1MwRkJTU3hYUVVGWExGVkJRVlVzYVVKQlFWWXNSMEZCT0VJc2EwSkJRVGRETzBGQlEwRXNTMEZCU1N4bFFVRmxMRU5CUVVNc1QwRkJSQ3hIUVVGWExHbENRVUZZTEVkQlFTdENMR3RDUVVGc1JEdEJRVU5CTEV0QlFVa3NWMEZCVnl4TlFVRk5MRWxCUVU0c1EwRkJWeXhUUVVGVExHZENRVUZVTEVOQlFUQkNMRkZCUVRGQ0xFTkJRVmdzUTBGQlpqczdRVUZGUVN4alFVRmhMRmxCUVdJN08wRkJSVUVzVVVGQlR5eFRRVUZUTEVsQlFWUXNRMEZCWXl4cFFrRkJVenRCUVVNM1FpeE5RVUZKTEU5QlFVOHNUVUZCVFN4clFrRkJha0k3UVVGRFFTeFRRVUZQTEV0QlFVc3NVMEZCVEN4RFFVRmxMRU5CUVdZc1RVRkJjMElzU1VGQmRFSXNTVUZCT0VJc1MwRkJTeXhUUVVGTUxFTkJRV1VzUTBGQlppeE5RVUZ6UWl4TFFVRkxMRmRCUVV3c1JVRkJNMFE3UVVGRFFTeEZRVWhOTEVOQlFWQTdRVUZKUVN4RFFWaEVPenRCUVdGQkxFbEJRVTBzY1VKQlFYRkNMRk5CUVhKQ0xHdENRVUZ4UWl4SFFVRk5PMEZCUTJoRExHbENRVUZuUWl4RlFVRm9RanM3UVVGRlFTeFZRVUZUTEU5QlFWUXNRMEZCYVVJc1owSkJRVkU3UVVGRGVFSXNUVUZCU1N4aFFVRmhMR1ZCUVdVc1NVRkJaaXhEUVVGcVFqczdRVUZGUVN4TlFVRkpMRlZCUVVvc1JVRkJaMEk3UVVGRFppeHBRa0ZCWXl4SlFVRmtMRWxCUVhOQ0xFTkJRWFJDTzBGQlEwRXNZMEZCVnl4WlFVRllMRU5CUVhkQ0xFbEJRWGhDTEVWQlFUaENMRWxCUVRsQ08wRkJRMEU3UVVGRFJDeEZRVkJFT3p0QlFWTkJPMEZCUTBFc1EwRmlSRHM3UVVGbFFTeEpRVUZOTEdWQlFXVXNVMEZCWml4WlFVRmxMRU5CUVVNc1RVRkJSQ3hGUVVGVExFOUJRVlFzUlVGQmNVSTdRVUZEZWtNc1VVRkJUeXhQUVVGUUxFTkJRV1VzYVVKQlFWTTdRVUZEZGtJc1RVRkJUU3dyUWtGQk5rSXNTMEZCYmtNN1FVRkRRU3hOUVVGSkxFOUJRVThzVTBGQlV5eGhRVUZVTEVOQlFYVkNMRXRCUVhaQ0xFTkJRVmc3UVVGRFFTeFBRVUZMTEZOQlFVd3NSMEZCYVVJc1pVRkJha0k3UVVGRFFTeFBRVUZMTEVkQlFVd3NSMEZCVnl4SFFVRllPMEZCUTBFc1ZVRkJVU3hOUVVGU0xFTkJRV1VzU1VGQlpqdEJRVU5CTEVWQlRrUTdRVUZQUVN4RFFWSkVPenRCUVZWQkxFbEJRVTBzWjBKQlFXZENMRk5CUVdoQ0xHRkJRV2RDTEVkQlFVMDdRVUZETTBJc1MwRkJTU3hsUVVGbExGTkJRVk1zWTBGQlZDeERRVUYzUWl4VFFVRjRRaXhEUVVGdVFqdEJRVU5CTEV0QlFVa3NZMEZCWXl4VlFVRlZMRkZCUVZFc1QwRkJiRUlzUjBGQk5FSXNVVUZCVVN4UlFVRjBSRHM3UVVGRlFTeGpRVUZoTEZOQlFXSXNSMEZCZVVJc1JVRkJla0k3TzBGQlJVRXNZVUZCV1N4UFFVRmFMRU5CUVc5Q0xHbENRVUZUTzBGQlFVRXNUVUZEZEVJc1MwRkVjMElzUjBGRGMwTXNTMEZFZEVNc1EwRkRkRUlzUzBGRWMwSTdRVUZCUVN4TlFVTm1MRkZCUkdVc1IwRkRjME1zUzBGRWRFTXNRMEZEWml4UlFVUmxPMEZCUVVFc1RVRkRUQ3hUUVVSTExFZEJRM05ETEV0QlJIUkRMRU5CUTB3c1UwRkVTenRCUVVGQkxFMUJRMDBzVFVGRVRpeEhRVU56UXl4TFFVUjBReXhEUVVOTkxFMUJSRTQ3UVVGQlFTeE5RVU5qTEZkQlJHUXNSMEZEYzBNc1MwRkVkRU1zUTBGRFl5eFhRVVJrTzBGQlFVRXNUVUZETWtJc1RVRkVNMElzUjBGRGMwTXNTMEZFZEVNc1EwRkRNa0lzVFVGRU0wSTdPenRCUVVjMVFpeGxRVUZoTEd0Q1FVRmlMRU5CUVdkRExGZEJRV2hETEVWQlFUWkRMSGxDUVVFM1F6czdRVUZGUVN4TlFVRkpMR1ZCUVdVc1UwRkJVeXhuUWtGQlZDeERRVUV3UWl4M1FrRkJNVUlzUTBGQmJrSTdRVUZEUVN4TlFVRkpMRlZCUVZVc1lVRkJZU3hoUVVGaExFMUJRV0lzUjBGQmMwSXNRMEZCYmtNc1EwRkJaRHM3UVVGRlFTeE5RVUZKTEU5QlFVOHNUVUZCV0N4RlFVRnRRaXhoUVVGaExFMUJRV0lzUlVGQmNVSXNUMEZCY2tJN08wRkJSVzVDTEUxQlFVa3NiMEpCUVc5Q0xGTkJRVk1zWVVGQlZDeERRVUYxUWl4TFFVRjJRaXhEUVVGNFFqdEJRVU5CTEUxQlFVa3NiVUpCUVcxQ0xGTkJRVk1zWVVGQlZDeERRVUYxUWl4SFFVRjJRaXhEUVVGMlFqdEJRVU5CTEUxQlFVa3NZMEZCWXl4VFFVRlRMR0ZCUVZRc1EwRkJkVUlzUjBGQmRrSXNRMEZCYkVJN1FVRkRRU3h2UWtGQmEwSXNVMEZCYkVJc1EwRkJORUlzUjBGQk5VSXNRMEZCWjBNc05FSkJRV2hETzBGQlEwRXNiVUpCUVdsQ0xGTkJRV3BDTEVOQlFUSkNMRWRCUVROQ0xFTkJRU3RDTEhGQ1FVRXZRanRCUVVOQkxHTkJRVmtzVTBGQldpeERRVUZ6UWl4SFFVRjBRaXhEUVVFd1FpeG5Ra0ZCTVVJN08wRkJSVUVzYlVKQlFXbENMRk5CUVdwQ0xFZEJRVFpDTEZkQlFUZENPMEZCUTBFc1kwRkJXU3hUUVVGYUxFZEJRWGRDTEUxQlFYaENPenRCUVVWQkxHOUNRVUZyUWl4TlFVRnNRaXhEUVVGNVFpeG5Ra0ZCZWtJc1JVRkJNa01zVjBGQk0wTTdRVUZEUVN4VlFVRlJMRTFCUVZJc1EwRkJaU3hwUWtGQlpqczdRVUZGUVN4TlFVRkpMR05CUVdNc1UwRkJVeXhuUWtGQlZDeERRVUV3UWl4NVFrRkJNVUlzUTBGQmJFSTdRVUZEUVN4TlFVRkpMRk5CUVZNc1dVRkJXU3haUVVGWkxFMUJRVm9zUjBGQmNVSXNRMEZCYWtNc1EwRkJZanM3UVVGRlFTeE5RVUZKTEdOQlFXTXNVMEZCVXl4blFrRkJWQ3hEUVVFd1Fpd3JRa0ZCTVVJc1EwRkJiRUk3UVVGRFFTeE5RVUZKTEZOQlFWTXNXVUZCV1N4WlFVRlpMRTFCUVZvc1IwRkJjVUlzUTBGQmFrTXNRMEZCWWpzN1FVRkZRU3hOUVVGSkxHRkJRV0VzVTBGQlV5eG5Ra0ZCVkN4RFFVRXdRaXc0UWtGQk1VSXNRMEZCYWtJN1FVRkRRU3hOUVVGSkxGRkJRVkVzVjBGQlZ5eFhRVUZYTEUxQlFWZ3NSMEZCYjBJc1EwRkJMMElzUTBGQldqczdRVUZGUVN4VFFVRlBMRk5CUVZBc1IwRkJiVUlzUzBGQmJrSTdRVUZEUVN4VFFVRlBMRk5CUVZBc1IwRkJiVUlzVTBGQmJrSTdRVUZEUVN4UlFVRk5MRk5CUVU0c1IwRkJhMElzVVVGQmJFSTdRVUZGUVN4RlFYQkRSRHM3UVVGelEwRTdRVUZEUVN4RFFUZERSRHM3UVVFclEwRXNTVUZCVFN4alFVRmpMRk5CUVdRc1YwRkJZeXhIUVVGTk8wRkJRM3BDTEZOQlFWRXNUMEZCVWl4RFFVRm5RaXhKUVVGb1FpeERRVUZ4UWl4VlFVRkRMRU5CUVVRc1JVRkJTU3hEUVVGS0xFVkJRVlU3UVVGRE9VSXNUVUZCU1N4VFFVRlRMRVZCUVVVc1MwRkJSaXhEUVVGUkxFTkJRVklzUlVGQlZ5eFhRVUZZTEVWQlFXSTdRVUZEUVN4TlFVRkpMRk5CUVZNc1JVRkJSU3hMUVVGR0xFTkJRVkVzUTBGQlVpeEZRVUZYTEZkQlFWZ3NSVUZCWWp0QlFVTkJMRTFCUVVrc1UwRkJVeXhOUVVGaUxFVkJRWEZDTEU5QlFVOHNRMEZCVUN4RFFVRnlRaXhMUVVOTExFbEJRVWtzVTBGQlV5eE5RVUZpTEVWQlFYRkNMRTlCUVU4c1EwRkJReXhEUVVGU0xFTkJRWEpDTEV0QlEwRXNUMEZCVHl4RFFVRlFPMEZCUTB3c1JVRk9SRHRCUVU5QkxFTkJVa1E3TzBGQlZVRXNTVUZCVFN4VlFVRlZMRk5CUVZZc1QwRkJWU3hEUVVGRExFbEJRVVFzUlVGQlZUdEJRVU42UWl4VFFVRlJMRkZCUVZJc1IwRkJiVUlzU1VGQmJrSTdRVUZEUVN4VFFVRlJMRTlCUVZJc1IwRkJhMElzUzBGQlN5eExRVUZNTEVWQlFXeENPMEZCUTBFN1FVRkRRVHRCUVVOQkxFTkJURVE3TzBGQlQwRXNTVUZCVFN4WlFVRlpMRk5CUVZvc1UwRkJXU3hIUVVGTk8wRkJRM1JDTEU5QlFVMHNSVUZCVGl4RlFVRlZMRWxCUVZZc1EwRkJaVHRCUVVGQkxGTkJRMlFzU1VGQlNTeEpRVUZLTEVWQlJHTTdRVUZCUVN4RlFVRm1MRVZCUlVVc1NVRkdSaXhEUVVWUExHZENRVUZSTzBGQlEyUXNWVUZCVVN4SlFVRlNPMEZCUTBFc1JVRktSQ3hGUVV0RExFbEJURVFzUTBGTFRTeFpRVUZOTzBGQlExZzdRVUZEUVN4RlFWQkVMRVZCVVVNc1MwRlNSQ3hEUVZGUE8wRkJRVUVzVTBGQlR5eFJRVUZSTEVsQlFWSXNRMEZCWVN4SFFVRmlMRU5CUVZBN1FVRkJRU3hGUVZKUU8wRkJVMFFzUTBGV1JEczdRVUZaUVN4SlFVRk5MRTlCUVU4c1UwRkJVQ3hKUVVGUExFZEJRVTA3UVVGRGJFSTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUTBGUVJEczdRVUZUUVRzN096czdPenM3UVVOcVVrRXNTVUZCVFN4dmJFSkJRVTQ3TzBGQlowSkJMRWxCUVUwc1VVRkJVU3hUUVVGU0xFdEJRVkVzUjBGQlRUdEJRVU51UWl4TFFVRkpMRmRCUVZjc1UwRkJVeXhqUVVGVUxFTkJRWGRDTEZGQlFYaENMRU5CUVdZN1FVRkRRU3hWUVVGVExGTkJRVlFzUjBGQmNVSXNVVUZCY2tJN1FVRkRRU3hEUVVoRU96dHJRa0ZMWlN4TElpd2labWxzWlNJNkltZGxibVZ5WVhSbFpDNXFjeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUlvWm5WdVkzUnBiMjRvS1h0bWRXNWpkR2x2YmlCeUtHVXNiaXgwS1h0bWRXNWpkR2x2YmlCdktHa3NaaWw3YVdZb0lXNWJhVjBwZTJsbUtDRmxXMmxkS1h0MllYSWdZejFjSW1aMWJtTjBhVzl1WENJOVBYUjVjR1Z2WmlCeVpYRjFhWEpsSmlaeVpYRjFhWEpsTzJsbUtDRm1KaVpqS1hKbGRIVnliaUJqS0drc0lUQXBPMmxtS0hVcGNtVjBkWEp1SUhVb2FTd2hNQ2s3ZG1GeUlHRTlibVYzSUVWeWNtOXlLRndpUTJGdWJtOTBJR1pwYm1RZ2JXOWtkV3hsSUNkY0lpdHBLMXdpSjF3aUtUdDBhSEp2ZHlCaExtTnZaR1U5WENKTlQwUlZURVZmVGs5VVgwWlBWVTVFWENJc1lYMTJZWElnY0QxdVcybGRQWHRsZUhCdmNuUnpPbnQ5ZlR0bFcybGRXekJkTG1OaGJHd29jQzVsZUhCdmNuUnpMR1oxYm1OMGFXOXVLSElwZTNaaGNpQnVQV1ZiYVYxYk1WMWJjbDA3Y21WMGRYSnVJRzhvYm54OGNpbDlMSEFzY0M1bGVIQnZjblJ6TEhJc1pTeHVMSFFwZlhKbGRIVnliaUJ1VzJsZExtVjRjRzl5ZEhOOVptOXlLSFpoY2lCMVBWd2lablZ1WTNScGIyNWNJajA5ZEhsd1pXOW1JSEpsY1hWcGNtVW1KbkpsY1hWcGNtVXNhVDB3TzJrOGRDNXNaVzVuZEdnN2FTc3JLVzhvZEZ0cFhTazdjbVYwZFhKdUlHOTljbVYwZFhKdUlISjlLU2dwSWl3aVkyOXVjM1FnWVhKMGFXTnNaVlJsYlhCc1lYUmxJRDBnWUZ4dVhIUThZWEowYVdOc1pTQmpiR0Z6Y3oxY0ltRnlkR2xqYkdWZlgyOTFkR1Z5WENJK1hHNWNkRngwUEdScGRpQmpiR0Z6Y3oxY0ltRnlkR2xqYkdWZlgybHVibVZ5WENJK1hHNWNkRngwWEhROFpHbDJJR05zWVhOelBWd2lZWEowYVdOc1pWOWZhR1ZoWkdsdVoxd2lQbHh1WEhSY2RGeDBYSFE4WVNCamJHRnpjejFjSW1wekxXVnVkSEo1TFhScGRHeGxYQ0krUEM5aFBseHVYSFJjZEZ4MFhIUThhRElnWTJ4aGMzTTlYQ0poY25ScFkyeGxMV2hsWVdScGJtZGZYM1JwZEd4bFhDSStQQzlvTWo1Y2JseDBYSFJjZEZ4MFBHUnBkaUJqYkdGemN6MWNJbUZ5ZEdsamJHVXRhR1ZoWkdsdVoxOWZibUZ0WlZ3aVBseHVYSFJjZEZ4MFhIUmNkRHh6Y0dGdUlHTnNZWE56UFZ3aVlYSjBhV05zWlMxb1pXRmthVzVuWDE5dVlXMWxMUzFtYVhKemRGd2lQand2YzNCaGJqNWNibHgwWEhSY2RGeDBYSFE4WVNCamJHRnpjejFjSW1wekxXVnVkSEo1TFdGeWRHbHpkRndpUGp3dllUNWNibHgwWEhSY2RGeDBYSFE4YzNCaGJpQmpiR0Z6Y3oxY0ltRnlkR2xqYkdVdGFHVmhaR2x1WjE5ZmJtRnRaUzB0YkdGemRGd2lQand2YzNCaGJqNWNibHgwWEhSY2RGeDBQQzlrYVhZK1hHNWNkRngwWEhROEwyUnBkajVjZEZ4dVhIUmNkRngwUEdScGRpQmpiR0Z6Y3oxY0ltRnlkR2xqYkdWZlgybHRZV2RsY3kxdmRYUmxjbHdpUGx4dVhIUmNkRngwWEhROFpHbDJJR05zWVhOelBWd2lZWEowYVdOc1pWOWZhVzFoWjJWekxXbHVibVZ5WENJK1BDOWthWFkrWEc1Y2RGeDBYSFJjZER4d0lHTnNZWE56UFZ3aWFuTXRZWEowYVdOc1pTMWhibU5vYjNJdGRHRnlaMlYwWENJK1BDOXdQbHh1WEhSY2REd3ZaR2wyUGx4dVhIUThMMkZ5ZEdsamJHVStYRzVnTzF4dVhHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCaGNuUnBZMnhsVkdWdGNHeGhkR1U3SWl3aWFXMXdiM0owSUc1aGRreG5JR1p5YjIwZ0p5NHZibUYyTFd4bkp6dGNibWx0Y0c5eWRDQmhjblJwWTJ4bFZHVnRjR3hoZEdVZ1puSnZiU0FuTGk5aGNuUnBZMnhsTFhSbGJYQnNZWFJsSnp0Y2JseHVZMjl1YzNRZ1JFSWdQU0FuYUhSMGNITTZMeTl1WlhoMWN5MWpZWFJoYkc5bkxtWnBjbVZpWVhObGFXOHVZMjl0TDNCdmMzUnpMbXB6YjI0L1lYVjBhRDAzWnpkd2VVdExlV3RPTTA0MVpYZHlTVzFvVDJGVE5uWjNja1p6WXpWbVMydHlhemhsYW5wbUp6dGNibU52Ym5OMElHRnNjR2hoWW1WMElEMGdXeWRoSnl3Z0oySW5MQ0FuWXljc0lDZGtKeXdnSjJVbkxDQW5aaWNzSUNkbkp5d2dKMmduTENBbmFpY3NJQ2RySnl3Z0oyd25MQ0FuYlNjc0lDZHVKeXdnSjI4bkxDQW5jQ2NzSUNkeUp5d2dKM01uTENBbmRDY3NJQ2QxSnl3Z0ozWW5MQ0FuZHljc0lDZDZKMTA3WEc1Y2JtTnZibk4wSUNSdVlYWWdQU0JrYjJOMWJXVnVkQzVuWlhSRmJHVnRaVzUwUW5sSlpDZ25hbk10Ym1GMkp5azdYRzVqYjI1emRDQWtjR0Z5WVd4c1lYZ2dQU0JrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eUtDY3VjR0Z5WVd4c1lYZ25LVHRjYm1OdmJuTjBJQ1JqYjI1MFpXNTBJRDBnWkc5amRXMWxiblF1Y1hWbGNubFRaV3hsWTNSdmNpZ25MbU52Ym5SbGJuUW5LVHRjYm1OdmJuTjBJQ1IwYVhSc1pTQTlJR1J2WTNWdFpXNTBMbWRsZEVWc1pXMWxiblJDZVVsa0tDZHFjeTEwYVhSc1pTY3BPMXh1WTI5dWMzUWdKR0Z5Y205M0lEMGdaRzlqZFcxbGJuUXVjWFZsY25sVFpXeGxZM1J2Y2lnbkxtRnljbTkzSnlrN1hHNWpiMjV6ZENBa2JXOWtZV3dnUFNCa2IyTjFiV1Z1ZEM1eGRXVnllVk5sYkdWamRHOXlLQ2N1Ylc5a1lXd25LVHRjYm1OdmJuTjBJQ1JzYVdkb2RHSnZlQ0E5SUdSdlkzVnRaVzUwTG5GMVpYSjVVMlZzWldOMGIzSW9KeTVzYVdkb2RHSnZlQ2NwTzF4dVkyOXVjM1FnSkhacFpYY2dQU0JrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eUtDY3ViR2xuYUhSaWIzZ3RkbWxsZHljcE8xeHVYRzVzWlhRZ2MyOXlkRXRsZVNBOUlEQTdJQzh2SURBZ1BTQmhjblJwYzNRc0lERWdQU0IwYVhSc1pWeHViR1YwSUdWdWRISnBaWE1nUFNCN0lHSjVRWFYwYUc5eU9pQmJYU3dnWW5sVWFYUnNaVG9nVzEwZ2ZUdGNibXhsZENCaFkzUnBkbVZGYm5SeWFXVnpJRDBnZTMwN1hHNWNibXhsZENCc2FXZG9kR0p2ZUNBOUlHWmhiSE5sTzF4dVkyOXVjM1FnWVhSMFlXTm9TVzFoWjJWTWFYTjBaVzVsY25NZ1BTQW9LU0E5UGlCN1hHNWNkR052Ym5OMElDUnBiV0ZuWlhNZ1BTQkJjbkpoZVM1bWNtOXRLR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNKQmJHd29KeTVoY25ScFkyeGxMV2x0WVdkbEp5a3BPMXh1WEhSamIyNXpiMnhsTG14dlp5Z25hVzFoWjJWek9pQW5MQ0FrYVcxaFoyVnpLVHRjYmx4dVhIUWthVzFoWjJWekxtWnZja1ZoWTJnb2FXMW5JRDArSUh0Y2JseDBYSFJwYldjdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnblkyeHBZMnNuTENBb0tTQTlQaUI3WEc1Y2RGeDBYSFJqYjI1emIyeGxMbXh2WnlnblkyeHBhMlZrSUNjc0lHbHRaeTV6Y21NcFhHNWNkRngwWEhSc1pYUWdjM0pqSUQwZ2FXMW5Mbk55WXp0Y2JseDBYSFJjZENSc2FXZG9kR0p2ZUM1amJHRnpjMHhwYzNRdVlXUmtLQ2R6YUc5M0xXbHRaeWNwTzF4dVhIUmNkRngwSkhacFpYY3VjMlYwUVhSMGNtbGlkWFJsS0NkemRIbHNaU2NzSUdCaVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lCMWNtd29KSHR6Y21OOUtXQXBPMXh1WEhSY2RGeDBiR2xuYUhSaWIzZ2dQU0IwY25WbE8xeHVYSFJjZEgwcFhHNWNkSDBwTzF4dVhHNWNkQ1IyYVdWM0xtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0oyTnNhV05ySnl3Z0tDa2dQVDRnZTF4dVhIUmNkR2xtSUNoc2FXZG9kR0p2ZUNrZ2UxeHVYSFJjZEZ4MEpHeHBaMmgwWW05NExtTnNZWE56VEdsemRDNXlaVzF2ZG1Vb0ozTm9iM2N0YVcxbkp5azdYRzVjZEZ4MFhIUnNhV2RvZEdKdmVDQTlJR1poYkhObE8xeHVYSFJjZEgxY2JseDBmU2s3WEc1OVhHNWNibXhsZENCdGIyUmhiQ0E5SUdaaGJITmxPMXh1WTI5dWMzUWdZWFIwWVdOb1RXOWtZV3hNYVhOMFpXNWxjbk1nUFNBb0tTQTlQaUI3WEc1Y2RHTnZibk4wSUNSbWFXNWtJRDBnWkc5amRXMWxiblF1WjJWMFJXeGxiV1Z1ZEVKNVNXUW9KMnB6TFdacGJtUW5LVHRjYmx4MFhHNWNkQ1JtYVc1a0xtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0oyTnNhV05ySnl3Z0tDa2dQVDRnZTF4dVhIUmNkQ1J0YjJSaGJDNWpiR0Z6YzB4cGMzUXVZV1JrS0NkemFHOTNKeWs3WEc1Y2RGeDBiVzlrWVd3Z1BTQjBjblZsTzF4dVhIUjlLVHRjYmx4dVhIUWtiVzlrWVd3dVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnblkyeHBZMnNuTENBb0tTQTlQaUI3WEc1Y2RGeDBjMlYwVkdsdFpXOTFkQ2dvS1NBOVBpQjdYRzVjZEZ4MFhIUWtiVzlrWVd3dVkyeGhjM05NYVhOMExuSmxiVzkyWlNnbmMyaHZkeWNwTzF4dVhIUmNkRngwYlc5a1lXd2dQU0JtWVd4elpUdGNibHgwWEhSOUxDQTFNREFwTzF4dVhIUjlLVHRjYmx4dVhIUjNhVzVrYjNjdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnbmEyVjVaRzkzYmljc0lDZ3BJRDArSUh0Y2JseDBYSFF2THlCd2NtVjJaVzUwUkdWbVlYVnNkQ2dwTzF4dVhIUmNkR052Ym5OdmJHVXViRzluS0NkclpYbGtiM2R1SnlrN1hHNWNkRngwYVdZZ0tHMXZaR0ZzS1NCN1hHNWNkRngwWEhRa2JXOWtZV3d1WTJ4aGMzTk1hWE4wTG5KbGJXOTJaU2duYzJodmR5Y3BPMXh1WEhSY2RGeDBiVzlrWVd3Z1BTQm1ZV3h6WlR0Y2JseDBYSFI5WEc1Y2RIMHBPMXh1ZlZ4dVhHNWpiMjV6ZENCelkzSnZiR3hVYjFSdmNDQTlJQ2dwSUQwK0lIdGNibHgwYkdWMElIUm9hVzVuSUQwZ1pHOWpkVzFsYm5RdVoyVjBSV3hsYldWdWRFSjVTV1FvSjJGdVkyaHZjaTEwWVhKblpYUW5LVHRjYmx4MGRHaHBibWN1YzJOeWIyeHNTVzUwYjFacFpYY29lMkpsYUdGMmFXOXlPaUJjSW5OdGIyOTBhRndpTENCaWJHOWphem9nWENKemRHRnlkRndpZlNrN1hHNTlYRzVjYm14bGRDQndjbVYyTzF4dWJHVjBJR04xY25KbGJuUWdQU0F3TzF4dWJHVjBJR2x6VTJodmQybHVaeUE5SUdaaGJITmxPMXh1WTI5dWMzUWdZWFIwWVdOb1FYSnliM2RNYVhOMFpXNWxjbk1nUFNBb0tTQTlQaUI3WEc1Y2RDUmhjbkp2ZHk1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NkamJHbGpheWNzSUNncElEMCtJSHRjYmx4MFhIUnpZM0p2Ykd4VWIxUnZjQ2dwTzF4dVhIUjlLVHRjYmx4dVhIUWtjR0Z5WVd4c1lYZ3VZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ25jMk55YjJ4c0p5d2dLQ2tnUFQ0Z2UxeHVYRzVjZEZ4MGJHVjBJSGtnUFNBa2RHbDBiR1V1WjJWMFFtOTFibVJwYm1kRGJHbGxiblJTWldOMEtDa3VlVHRjYmx4MFhIUnBaaUFvWTNWeWNtVnVkQ0FoUFQwZ2VTa2dlMXh1WEhSY2RGeDBjSEpsZGlBOUlHTjFjbkpsYm5RN1hHNWNkRngwWEhSamRYSnlaVzUwSUQwZ2VUdGNibHgwWEhSOVhHNWNibHgwWEhScFppQW9lU0E4UFNBdE5UQWdKaVlnSVdselUyaHZkMmx1WnlrZ2UxeHVYSFJjZEZ4MEpHRnljbTkzTG1Oc1lYTnpUR2x6ZEM1aFpHUW9KM05vYjNjbktUdGNibHgwWEhSY2RHbHpVMmh2ZDJsdVp5QTlJSFJ5ZFdVN1hHNWNkRngwZlNCbGJITmxJR2xtSUNoNUlENGdMVFV3SUNZbUlHbHpVMmh2ZDJsdVp5a2dlMXh1WEhSY2RGeDBKR0Z5Y205M0xtTnNZWE56VEdsemRDNXlaVzF2ZG1Vb0ozTm9iM2NuS1R0Y2JseDBYSFJjZEdselUyaHZkMmx1WnlBOUlHWmhiSE5sTzF4dVhIUmNkSDFjYmx4MGZTazdYRzU5TzF4dVhHNWpiMjV6ZENCaFpHUlRiM0owUW5WMGRHOXVUR2x6ZEdWdVpYSnpJRDBnS0NrZ1BUNGdlMXh1WEhSc1pYUWdKR0o1UVhKMGFYTjBJRDBnWkc5amRXMWxiblF1WjJWMFJXeGxiV1Z1ZEVKNVNXUW9KMnB6TFdKNUxXRnlkR2x6ZENjcE8xeHVYSFJzWlhRZ0pHSjVWR2wwYkdVZ1BTQmtiMk4xYldWdWRDNW5aWFJGYkdWdFpXNTBRbmxKWkNnbmFuTXRZbmt0ZEdsMGJHVW5LVHRjYmx4MEpHSjVRWEowYVhOMExtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0oyTnNhV05ySnl3Z0tDa2dQVDRnZTF4dVhIUmNkSE5qY205c2JGUnZWRzl3S0NrN1hHNWNkRngwYVdZZ0tITnZjblJMWlhrcElIdGNibHgwWEhSY2RITnZjblJMWlhrZ1BTQXdPMXh1WEhSY2RGeDBKR0o1UVhKMGFYTjBMbU5zWVhOelRHbHpkQzVoWkdRb0oyRmpkR2wyWlNjcE8xeHVYSFJjZEZ4MEpHSjVWR2wwYkdVdVkyeGhjM05NYVhOMExuSmxiVzkyWlNnbllXTjBhWFpsSnlrN1hHNWNkRngwWEhSeVpXNWtaWEpGYm5SeWFXVnpLQ2s3WEc1Y2RGeDBmVnh1WEhSOUtUdGNibHh1WEhRa1lubFVhWFJzWlM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NkamJHbGpheWNzSUNncElEMCtJSHRjYmx4MFhIUnpZM0p2Ykd4VWIxUnZjQ2dwTzF4dVhIUmNkR2xtSUNnaGMyOXlkRXRsZVNrZ2UxeHVYSFJjZEZ4MGMyOXlkRXRsZVNBOUlERTdYRzVjZEZ4MFhIUWtZbmxVYVhSc1pTNWpiR0Z6YzB4cGMzUXVZV1JrS0NkaFkzUnBkbVVuS1R0Y2JseDBYSFJjZENSaWVVRnlkR2x6ZEM1amJHRnpjMHhwYzNRdWNtVnRiM1psS0NkaFkzUnBkbVVuS1R0Y2JseDBYSFJjZEhKbGJtUmxja1Z1ZEhKcFpYTW9LVHRjYmx4MFhIUjlYRzVjZEgwcE8xeHVmVHRjYmx4dVkyOXVjM1FnYldGclpVRnNjR2hoWW1WMElEMGdLQ2tnUFQ0Z2UxeHVYSFJzWlhRZ0pHOTFkR1Z5SUQwZ1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWduTG1Gc2NHaGhZbVYwWDE5c1pYUjBaWEp6SnlrN1hHNWNkQ1J2ZFhSbGNpNXBibTVsY2toVVRVd2dQU0FuSnp0Y2JseHVYSFJoYkhCb1lXSmxkQzVtYjNKRllXTm9LR3hsZEhSbGNpQTlQaUI3WEc1Y2RGeDBiR1YwSUNSaGJtTm9iM0lnUFNCa2IyTjFiV1Z1ZEM1amNtVmhkR1ZGYkdWdFpXNTBLQ2RoSnlrN1hHNWNibHgwWEhRa1lXNWphRzl5TG1sdWJtVnlTRlJOVENBOUlHeGxkSFJsY2k1MGIxVndjR1Z5UTJGelpTZ3BPMXh1WEhSY2RDUmhibU5vYjNJdVkyeGhjM05PWVcxbElEMGdKMkZzY0doaFltVjBYMTlzWlhSMFpYSXRZVzVqYUc5eUp6dGNibHgwWEhScFppQW9ZV04wYVhabFJXNTBjbWxsYzF0c1pYUjBaWEpkS1NCN1hHNWNkRngwWEhRa1lXNWphRzl5TG1Oc1lYTnpUR2x6ZEM1aFpHUW9KM1V0WVdOMGFYWmxKeWs3WEc1Y2RGeDBYSFFrWVc1amFHOXlMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9KMk5zYVdOckp5d2dLQ2tnUFQ0Z2UxeHVYSFJjZEZ4MFhIUmpiMjV6ZENCc1pYUjBaWEpPYjJSbElEMGdaRzlqZFcxbGJuUXVaMlYwUld4bGJXVnVkRUo1U1dRb2JHVjBkR1Z5S1R0Y2JseDBYSFJjZEZ4MFkyOXVjM1FnZEdGeVoyVjBJRDBnYkdWMGRHVnlJRDA5UFNBbllTY2dQeUJrYjJOMWJXVnVkQzVuWlhSRmJHVnRaVzUwUW5sSlpDZ25ZVzVqYUc5eUxYUmhjbWRsZENjcElEb2diR1YwZEdWeVRtOWtaUzV3WVhKbGJuUkZiR1Z0Wlc1MExuQmhjbVZ1ZEVWc1pXMWxiblF1Y0dGeVpXNTBSV3hsYldWdWRDNXdZWEpsYm5SRmJHVnRaVzUwTG5CeVpYWnBiM1Z6Uld4bGJXVnVkRk5wWW14cGJtY3VjWFZsY25sVFpXeGxZM1J2Y2lnbkxtcHpMV0Z5ZEdsamJHVXRZVzVqYUc5eUxYUmhjbWRsZENjcE8xeHVYSFJjZEZ4MFhIUmpiMjV6YjJ4bExteHZaeWduZEdGeVoyVjBPaUFuTENCMFlYSm5aWFFwTzF4dVhIUmNkRngwWEhSMFlYSm5aWFF1YzJOeWIyeHNTVzUwYjFacFpYY29lMkpsYUdGMmFXOXlPaUJjSW5OdGIyOTBhRndpTENCaWJHOWphem9nWENKemRHRnlkRndpZlNrN1hHNWNkRngwWEhSOUtWeHVYSFJjZEgxY2JseDBYSFFrYjNWMFpYSXVZWEJ3Wlc1a0tDUmhibU5vYjNJcE8xeHVYSFI5S1R0Y2JuMDdYRzVjYm1OdmJuTjBJR05zWldGeVFXNWphRzl5Y3lBOUlDaHdjbVYyVTJWc1pXTjBiM0lwSUQwK0lIdGNibHgwYkdWMElDUmxiblJ5YVdWeklEMGdRWEp5WVhrdVpuSnZiU2hrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eVFXeHNLSEJ5WlhaVFpXeGxZM1J2Y2lrcE8xeHVYSFFrWlc1MGNtbGxjeTVtYjNKRllXTm9LR1Z1ZEhKNUlEMCtJR1Z1ZEhKNUxuSmxiVzkyWlVGMGRISnBZblYwWlNnbmJtRnRaU2NwS1R0Y2JuMDdYRzVjYm1OdmJuTjBJR1pwYm1SR2FYSnpkRVZ1ZEhKNUlEMGdLR05vWVhJcElEMCtJSHRjYmx4MGJHVjBJSE5sYkdWamRHOXlJRDBnYzI5eWRFdGxlU0EvSUNjdWFuTXRaVzUwY25rdGRHbDBiR1VuSURvZ0p5NXFjeTFsYm5SeWVTMWhjblJwYzNRbk8xeHVYSFJzWlhRZ2NISmxkbE5sYkdWamRHOXlJRDBnSVhOdmNuUkxaWGtnUHlBbkxtcHpMV1Z1ZEhKNUxYUnBkR3hsSnlBNklDY3Vhbk10Wlc1MGNua3RZWEowYVhOMEp6dGNibHgwYkdWMElDUmxiblJ5YVdWeklEMGdRWEp5WVhrdVpuSnZiU2hrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eVFXeHNLSE5sYkdWamRHOXlLU2s3WEc1Y2JseDBZMnhsWVhKQmJtTm9iM0p6S0hCeVpYWlRaV3hsWTNSdmNpazdYRzVjYmx4MGNtVjBkWEp1SUNSbGJuUnlhV1Z6TG1acGJtUW9aVzUwY25rZ1BUNGdlMXh1WEhSY2RHeGxkQ0J1YjJSbElEMGdaVzUwY25rdWJtVjRkRVZzWlcxbGJuUlRhV0pzYVc1bk8xeHVYSFJjZEhKbGRIVnliaUJ1YjJSbExtbHVibVZ5U0ZSTlRGc3dYU0E5UFQwZ1kyaGhjaUI4ZkNCdWIyUmxMbWx1Ym1WeVNGUk5URnN3WFNBOVBUMGdZMmhoY2k1MGIxVndjR1Z5UTJGelpTZ3BPMXh1WEhSOUtUdGNibjA3WEc1Y2JtTnZibk4wSUhObGRFRnNjR2hoWW1WMFFXNWphRzl5Y3lBOUlDZ3BJRDArSUh0Y2JseDBZV04wYVhabFJXNTBjbWxsY3lBOUlIdDlPMXh1WEc1Y2RHRnNjR2hoWW1WMExtWnZja1ZoWTJnb1kyaGhjaUE5UGlCN1hHNWNkRngwYkdWMElHWnBjbk4wUlc1MGNua2dQU0JtYVc1a1JtbHljM1JGYm5SeWVTaGphR0Z5S1R0Y2JseHVYSFJjZEdsbUlDaG1hWEp6ZEVWdWRISjVLU0I3WEc1Y2RGeDBYSFJoWTNScGRtVkZiblJ5YVdWelcyTm9ZWEpkSUQwZ01UdGNibHgwWEhSY2RHWnBjbk4wUlc1MGNua3VjMlYwUVhSMGNtbGlkWFJsS0NkcFpDY3NJR05vWVhJcE8xeHVYSFJjZEgxY2JseDBmU2s3WEc1Y2JseDBiV0ZyWlVGc2NHaGhZbVYwS0NrN1hHNTlPMXh1WEc1amIyNXpkQ0J5Wlc1a1pYSkpiV0ZuWlhNZ1BTQW9hVzFoWjJWekxDQWthVzFoWjJWektTQTlQaUI3WEc1Y2RHbHRZV2RsY3k1bWIzSkZZV05vS0dsdFlXZGxJRDArSUh0Y2JseDBYSFJqYjI1emRDQnpjbU1nUFNCZ0xpNHZMaTR2WVhOelpYUnpMMmx0WVdkbGN5OGtlMmx0WVdkbGZXQTdYRzVjZEZ4MGJHVjBJQ1JwYldjZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwS0NkSlRVY25LVHRjYmx4MFhIUWthVzFuTG1Oc1lYTnpUbUZ0WlNBOUlDZGhjblJwWTJ4bExXbHRZV2RsSnp0Y2JseDBYSFFrYVcxbkxuTnlZeUE5SUhOeVl6dGNibHgwWEhRa2FXMWhaMlZ6TG1Gd2NHVnVaQ2drYVcxbktUdGNibHgwZlNsY2JuMDdYRzVjYm1OdmJuTjBJSEpsYm1SbGNrVnVkSEpwWlhNZ1BTQW9LU0E5UGlCN1hHNWNkR3hsZENBa1lYSjBhV05zWlV4cGMzUWdQU0JrYjJOMWJXVnVkQzVuWlhSRmJHVnRaVzUwUW5sSlpDZ25hbk10YkdsemRDY3BPMXh1WEhSc1pYUWdaVzUwY21sbGMweHBjM1FnUFNCemIzSjBTMlY1SUQ4Z1pXNTBjbWxsY3k1aWVWUnBkR3hsSURvZ1pXNTBjbWxsY3k1aWVVRjFkR2h2Y2p0Y2JseHVYSFFrWVhKMGFXTnNaVXhwYzNRdWFXNXVaWEpJVkUxTUlEMGdKeWM3WEc1Y2JseDBaVzUwY21sbGMweHBjM1F1Wm05eVJXRmphQ2hsYm5SeWVTQTlQaUI3WEc1Y2RGeDBiR1YwSUhzZ2RHbDBiR1VzSUd4aGMzUk9ZVzFsTENCbWFYSnpkRTVoYldVc0lHbHRZV2RsY3l3Z1pHVnpZM0pwY0hScGIyNHNJR1JsZEdGcGJDQjlJRDBnWlc1MGNuazdYRzVjYmx4MFhIUWtZWEowYVdOc1pVeHBjM1F1YVc1elpYSjBRV1JxWVdObGJuUklWRTFNS0NkaVpXWnZjbVZsYm1RbkxDQmhjblJwWTJ4bFZHVnRjR3hoZEdVcE8xeHVYRzVjZEZ4MGJHVjBJQ1JwYldGblpYTk9iMlJsY3lBOUlHUnZZM1Z0Wlc1MExuRjFaWEo1VTJWc1pXTjBiM0pCYkd3b0p5NWhjblJwWTJ4bFgxOXBiV0ZuWlhNdGFXNXVaWEluS1R0Y2JseDBYSFJzWlhRZ0pHbHRZV2RsY3lBOUlDUnBiV0ZuWlhOT2IyUmxjMXNrYVcxaFoyVnpUbTlrWlhNdWJHVnVaM1JvSUMwZ01WMDdYRzVjYmx4MFhIUnBaaUFvYVcxaFoyVnpMbXhsYm1kMGFDa2djbVZ1WkdWeVNXMWhaMlZ6S0dsdFlXZGxjeXdnSkdsdFlXZGxjeWs3WEc1Y2RGeDBYRzVjZEZ4MGJHVjBJQ1JrWlhOamNtbHdkR2x2Yms5MWRHVnlJRDBnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRDZ25aR2wySnlrN1hHNWNkRngwYkdWMElDUmtaWE5qY21sd2RHbHZiazV2WkdVZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwS0Nkd0p5azdYRzVjZEZ4MGJHVjBJQ1JrWlhSaGFXeE9iMlJsSUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkQ2duY0NjcE8xeHVYSFJjZENSa1pYTmpjbWx3ZEdsdmJrOTFkR1Z5TG1Oc1lYTnpUR2x6ZEM1aFpHUW9KMkZ5ZEdsamJHVXRaR1Z6WTNKcGNIUnBiMjVmWDI5MWRHVnlKeWs3WEc1Y2RGeDBKR1JsYzJOeWFYQjBhVzl1VG05a1pTNWpiR0Z6YzB4cGMzUXVZV1JrS0NkaGNuUnBZMnhsTFdSbGMyTnlhWEIwYVc5dUp5azdYRzVjZEZ4MEpHUmxkR0ZwYkU1dlpHVXVZMnhoYzNOTWFYTjBMbUZrWkNnbllYSjBhV05zWlMxa1pYUmhhV3duS1R0Y2JseHVYSFJjZENSa1pYTmpjbWx3ZEdsdmJrNXZaR1V1YVc1dVpYSklWRTFNSUQwZ1pHVnpZM0pwY0hScGIyNDdYRzVjZEZ4MEpHUmxkR0ZwYkU1dlpHVXVhVzV1WlhKSVZFMU1JRDBnWkdWMFlXbHNPMXh1WEc1Y2RGeDBKR1JsYzJOeWFYQjBhVzl1VDNWMFpYSXVZWEJ3Wlc1a0tDUmtaWE5qY21sd2RHbHZiazV2WkdVc0lDUmtaWFJoYVd4T2IyUmxLVHRjYmx4MFhIUWthVzFoWjJWekxtRndjR1Z1WkNna1pHVnpZM0pwY0hScGIyNVBkWFJsY2lrN1hHNWNibHgwWEhSc1pYUWdKSFJwZEd4bFRtOWtaWE1nUFNCa2IyTjFiV1Z1ZEM1eGRXVnllVk5sYkdWamRHOXlRV3hzS0NjdVlYSjBhV05zWlMxb1pXRmthVzVuWDE5MGFYUnNaU2NwTzF4dVhIUmNkR3hsZENBa2RHbDBiR1VnUFNBa2RHbDBiR1ZPYjJSbGMxc2tkR2wwYkdWT2IyUmxjeTVzWlc1bmRHZ2dMU0F4WFR0Y2JseHVYSFJjZEd4bGRDQWtabWx5YzNST2IyUmxjeUE5SUdSdlkzVnRaVzUwTG5GMVpYSjVVMlZzWldOMGIzSkJiR3dvSnk1aGNuUnBZMnhsTFdobFlXUnBibWRmWDI1aGJXVXRMV1pwY25OMEp5azdYRzVjZEZ4MGJHVjBJQ1JtYVhKemRDQTlJQ1JtYVhKemRFNXZaR1Z6V3lSbWFYSnpkRTV2WkdWekxteGxibWQwYUNBdElERmRPMXh1WEc1Y2RGeDBiR1YwSUNSc1lYTjBUbTlrWlhNZ1BTQmtiMk4xYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5UVd4c0tDY3VZWEowYVdOc1pTMW9aV0ZrYVc1blgxOXVZVzFsTFMxc1lYTjBKeWs3WEc1Y2RGeDBiR1YwSUNSc1lYTjBJRDBnSkd4aGMzUk9iMlJsYzFza2JHRnpkRTV2WkdWekxteGxibWQwYUNBdElERmRPMXh1WEc1Y2RGeDBKSFJwZEd4bExtbHVibVZ5U0ZSTlRDQTlJSFJwZEd4bE8xeHVYSFJjZENSbWFYSnpkQzVwYm01bGNraFVUVXdnUFNCbWFYSnpkRTVoYldVN1hHNWNkRngwSkd4aGMzUXVhVzV1WlhKSVZFMU1JRDBnYkdGemRFNWhiV1U3WEc1Y2JseDBmU2s3WEc1Y2JseDBjMlYwUVd4d2FHRmlaWFJCYm1Ob2IzSnpLQ2s3WEc1OU8xeHVYRzVqYjI1emRDQnpiM0owUW5sVWFYUnNaU0E5SUNncElEMCtJSHRjYmx4MFpXNTBjbWxsY3k1aWVWUnBkR3hsTG5OdmNuUW9LR0VzSUdJcElEMCtJSHRjYmx4MFhIUnNaWFFnWVZScGRHeGxJRDBnWVM1MGFYUnNaVnN3WFM1MGIxVndjR1Z5UTJGelpTZ3BPMXh1WEhSY2RHeGxkQ0JpVkdsMGJHVWdQU0JpTG5ScGRHeGxXekJkTG5SdlZYQndaWEpEWVhObEtDazdYRzVjZEZ4MGFXWWdLR0ZVYVhSc1pTQStJR0pVYVhSc1pTa2djbVYwZFhKdUlERTdYRzVjZEZ4MFpXeHpaU0JwWmlBb1lWUnBkR3hsSUR3Z1lsUnBkR3hsS1NCeVpYUjFjbTRnTFRFN1hHNWNkRngwWld4elpTQnlaWFIxY200Z01EdGNibHgwZlNrN1hHNTlPMXh1WEc1amIyNXpkQ0J6WlhSRVlYUmhJRDBnS0dSaGRHRXBJRDArSUh0Y2JseDBaVzUwY21sbGN5NWllVUYxZEdodmNpQTlJR1JoZEdFN1hHNWNkR1Z1ZEhKcFpYTXVZbmxVYVhSc1pTQTlJR1JoZEdFdWMyeHBZMlVvS1R0Y2JseDBjMjl5ZEVKNVZHbDBiR1VvS1R0Y2JseDBjbVZ1WkdWeVJXNTBjbWxsY3lncE8xeHVmVnh1WEc1amIyNXpkQ0JtWlhSamFFUmhkR0VnUFNBb0tTQTlQaUI3WEc1Y2RGeDBabVYwWTJnb1JFSXBMblJvWlc0b2NtVnpJRDArWEc1Y2RGeDBYSFJ5WlhNdWFuTnZiaWdwWEc1Y2RGeDBLUzUwYUdWdUtHUmhkR0VnUFQ0Z2UxeHVYSFJjZEZ4MGMyVjBSR0YwWVNoa1lYUmhLVHRjYmx4MFhIUjlLVnh1WEhSY2RDNTBhR1Z1S0NncElEMCtJSHRjYmx4MFhIUmNkR0YwZEdGamFFbHRZV2RsVEdsemRHVnVaWEp6S0NrN1hHNWNkRngwZlNsY2JseDBYSFF1WTJGMFkyZ29aWEp5SUQwK0lHTnZibk52YkdVdWQyRnliaWhsY25JcEtUdGNibjA3WEc1Y2JtTnZibk4wSUdsdWFYUWdQU0FvS1NBOVBpQjdYRzVjZEdabGRHTm9SR0YwWVNncE8xeHVYSFJ1WVhaTVp5Z3BPMXh1WEhSdFlXdGxRV3h3YUdGaVpYUW9LVHRjYmx4MFlXUmtVMjl5ZEVKMWRIUnZia3hwYzNSbGJtVnljeWdwTzF4dVhIUmhkSFJoWTJoQmNuSnZkMHhwYzNSbGJtVnljeWdwTzF4dVhIUmhkSFJoWTJoTmIyUmhiRXhwYzNSbGJtVnljeWdwTzF4dWZWeHVYRzVwYm1sMEtDazdYRzRpTENKamIyNXpkQ0IwWlcxd2JHRjBaU0E5SUZ4dVhIUmdQR1JwZGlCamJHRnpjejFjSW01aGRsOWZhVzV1WlhKY0lqNWNibHgwWEhROFpHbDJJR05zWVhOelBWd2libUYyWDE5emIzSjBMV0o1WENJK1hHNWNkRngwWEhROGMzQmhiaUJqYkdGemN6MWNJbk52Y25RdFlubGZYM1JwZEd4bFhDSStVMjl5ZENCaWVUd3ZjM0JoYmo1Y2JseDBYSFJjZER4aWRYUjBiMjRnWTJ4aGMzTTlYQ0p6YjNKMExXSjVYMTlpZVMxaGNuUnBjM1FnWVdOMGFYWmxYQ0lnYVdROVhDSnFjeTFpZVMxaGNuUnBjM1JjSWo1QmNuUnBjM1E4TDJKMWRIUnZiajVjYmx4MFhIUmNkRHh6Y0dGdUlHTnNZWE56UFZ3aWMyOXlkQzFpZVY5ZlpHbDJhV1JsY2x3aVBpQjhJRHd2YzNCaGJqNWNibHgwWEhSY2REeGlkWFIwYjI0Z1kyeGhjM005WENKemIzSjBMV0o1WDE5aWVTMTBhWFJzWlZ3aUlHbGtQVndpYW5NdFlua3RkR2wwYkdWY0lqNVVhWFJzWlR3dlluVjBkRzl1UGx4dVhIUmNkRngwUEhOd1lXNGdZMnhoYzNNOVhDSnpiM0owTFdKNVgxOWthWFpwWkdWeUlHWnBibVJjSWo0Z2ZDQThMM053WVc0K1hHNWNkRngwWEhROGMzQmhiaUJqYkdGemN6MWNJbVpwYm1SY0lpQnBaRDFjSW1wekxXWnBibVJjSWo0bUl6ZzVPRFE3Ump3dmMzQmhiajVjYmx4MFhIUThMMlJwZGo1Y2JseDBYSFE4WkdsMklHTnNZWE56UFZ3aWJtRjJYMTloYkhCb1lXSmxkRndpUGx4dVhIUmNkRngwUEhOd1lXNGdZMnhoYzNNOVhDSmhiSEJvWVdKbGRGOWZkR2wwYkdWY0lqNUhieUIwYnp3dmMzQmhiajVjYmx4MFhIUmNkRHhrYVhZZ1kyeGhjM005WENKaGJIQm9ZV0psZEY5ZmJHVjBkR1Z5YzF3aVBqd3ZaR2wyUGx4dVhIUmNkRHd2WkdsMlBseHVYSFE4TDJScGRqNWdPMXh1WEc1amIyNXpkQ0J1WVhaTVp5QTlJQ2dwSUQwK0lIdGNibHgwYkdWMElHNWhkazkxZEdWeUlEMGdaRzlqZFcxbGJuUXVaMlYwUld4bGJXVnVkRUo1U1dRb0oycHpMVzVoZGljcE8xeHVYSFJ1WVhaUGRYUmxjaTVwYm01bGNraFVUVXdnUFNCMFpXMXdiR0YwWlR0Y2JuMDdYRzVjYm1WNGNHOXlkQ0JrWldaaGRXeDBJRzVoZGt4bk95SmRmUT09In0=
