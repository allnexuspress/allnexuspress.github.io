(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

var _navigation = require('./navigation');

var _navigation2 = _interopRequireDefault(_navigation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var test = function test() {
	console.log('nav: ', _navigation2.default);
	(0, _navigation2.default)();
};

test();

var build = function () {
	var DB = 'https://nexus-catalog.firebaseio.com/posts.json?auth=7g7pyKKykN3N5ewrImhOaS6vwrFsc5fKkrk8ejzf';
	var alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];

	// 0 = artist, 1 = title
	var sortKey = 0;
	var entries = {
		byAuthor: [],
		byTitle: []
	};

	var articleTemplate = '\n\t\t<article class="article__outer">\n\t\t\t<div class="article__inner">\n\t\t\t\t<div class="article__heading">\n\t\t\t\t\t<h2 class="article-heading__title"></h2>\n\t\t\t\t\t<div class="article-heading__name">\n\t\t\t\t\t\t<span class="article-heading__name--first"></span>\n\t\t\t\t\t\t<span class="article-heading__name--last"></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="article__images-outer">\n\t\t\t\t\t<div class="article__images-inner"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</article>\n\t';

	var renderImages = function renderImages(images) {
		var $imagesNodes = document.querySelectorAll('.article__images-inner');
		var $images = $imagesNodes[$imagesNodes.length - 1];

		images.forEach(function (image) {
			var $img = document.createElement('IMG');
			$img.src = image;
			$images.append($img);
		});
	};

	var renderEntries = function renderEntries(entries) {
		console.log('rendering entries. sortKey is: ', sortKey, 'entries are: ', entries);
		var $articleList = document.getElementById('js-list');

		entries.forEach(function (entry) {
			var title = entry.title,
			    lastName = entry.lastName,
			    firstName = entry.firstName,
			    images = entry.images;


			$articleList.insertAdjacentHTML('beforeend', articleTemplate);

			if (images.length) renderImages(images);

			var $titleNodes = document.querySelectorAll('.article-heading__title');
			var $title = $titleNodes[$titleNodes.length - 1];

			var $firstNodes = document.querySelectorAll('.article-heading__name--first');
			var $first = $firstNodes[$firstNodes.length - 1];

			var $lastNodes = document.querySelectorAll('.article-heading__name--last');
			var $last = $lastNodes[$lastNodes.length - 1];

			$title.innerHTML = title;
			$first.innerHTML = firstName;
			$last.innerHTML = lastName;
		});
	};

	var sortByTitle = function sortByTitle(data) {
		console.log('entries before sort: ', data);
		data.sort(function (a, b) {
			return b.title[0].toUpperCase() - a.title[0].toUpperCase();
		});

		entries.byTitle = data;
		console.log('entries after sort: ', entries.byTitle);
	};

	var fetchData = function fetchData() {
		fetch(DB).then(function (res) {
			return res.json();
		}).then(function (data) {
			sortByTitle(data);
			entries.byAuthor = data;
			renderEntries(entries.byAuthor);
		}).then(function () {
			// setBackground();
		}).catch(function (err) {
			return console.warn(err);
		});
	};

	var addSortButtonListeners = function addSortButtonListeners() {
		var $author = document.getElementById('js-author');
		var $title = document.getElementById('js-title');

		$author.addEventListener('click', function () {
			if (sortKey) {
				sortKey = 0;
				renderEntries(entries.byAuthor);
			}
		});

		$title.addEventListener('click', function () {
			if (!sortKey) {
				sortKey = 1;
				console.log('in title. sortKey is: ', sortKey);
				renderEntries(entries.byTitle);
			}
		});
	};

	var isShowing = false;
	var toggleMobileNav = function toggleMobileNav() {
		var $nav = document.getElementById('js-nav');
		var $icon = document.getElementById('js-angle-icon');
		var $list = document.getElementById('js-list');
		console.log('nav is: ', $nav, '$list is: ', $list);
		if (!isShowing) {
			$nav.classList.add('u-show');
			$icon.setAttribute('style', 'transform: rotate(180deg');
			$list.setAttribute('style', 'transform: translateY(210px)');

			isShowing = true;
		} else {
			$nav.classList.remove('u-show');
			$nav.classList.add('u-hide');
			$icon.setAttribute('style', 'transform: rotate(0deg');
			$list.setAttribute('style', 'transform: translateY(65px)');

			isShowing = false;
		};
	};

	var addMobileControlButton = function addMobileControlButton() {
		var $button = document.getElementById('js-mobile-nav');
		$button.addEventListener('click', toggleMobileNav);
	};

	// const setBackground = () => {
	// 	let articles = document.querySelectorAll('.article__outer');
	// 	console.log('articles: ', articles);

	// 	Array.from(articles).forEach((a, i) => {
	// 		let direction = (i % 2 !== 0) ? 'bottom' : 'top';
	// 		a.style.background = `linear-gradient(to ${direction}, red, yellow)`;
	// 		});
	// };

	var makeAlphabet = function makeAlphabet() {
		var $outer = document.querySelector('.alphabet__letters-inner');

		alphabet.forEach(function (letter) {
			var $button = document.createElement('button');

			$button.innerHTML = letter.toUpperCase();
			$button.className = 'alphabet__letter-button';

			$outer.append($button);
		});
	};

	var init = function init() {
		fetchData();
		makeAlphabet();
		addMobileControlButton();
		addSortButtonListeners();
	};

	init();
}();

},{"./navigation":2}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
var nav = function nav() {
	console.log("THIS IS WORKING");
};

exports.default = nav;

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvaW5kZXguanMiLCJzcmMvanMvbmF2aWdhdGlvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FDQUE7Ozs7OztBQUVBLElBQU0sT0FBTyxTQUFQLElBQU8sR0FBTTtBQUNsQixTQUFRLEdBQVIsQ0FBWSxPQUFaLEVBQXFCLG9CQUFyQjtBQUNBO0FBQ0EsQ0FIRDs7QUFLQTs7QUFFQSxJQUFNLFFBQVMsWUFBTTtBQUNwQixLQUFNLEtBQUssK0ZBQVg7QUFDQSxLQUFNLFdBQVcsQ0FBQyxHQUFELEVBQU0sR0FBTixFQUFXLEdBQVgsRUFBZ0IsR0FBaEIsRUFBcUIsR0FBckIsRUFBMEIsR0FBMUIsRUFBK0IsR0FBL0IsRUFBb0MsR0FBcEMsRUFBeUMsR0FBekMsRUFBOEMsR0FBOUMsRUFBbUQsR0FBbkQsRUFBd0QsR0FBeEQsRUFBNkQsR0FBN0QsRUFBa0UsR0FBbEUsRUFBdUUsR0FBdkUsRUFBNEUsR0FBNUUsRUFBaUYsR0FBakYsRUFBc0YsR0FBdEYsRUFBMkYsR0FBM0YsRUFBZ0csR0FBaEcsRUFBcUcsR0FBckcsRUFBMEcsR0FBMUcsRUFBK0csR0FBL0csRUFBb0gsR0FBcEgsRUFBeUgsR0FBekgsRUFBOEgsR0FBOUgsQ0FBakI7O0FBRUE7QUFDQSxLQUFJLFVBQVUsQ0FBZDtBQUNBLEtBQUksVUFBVTtBQUNiLFlBQVUsRUFERztBQUViLFdBQVM7QUFGSSxFQUFkOztBQUtBLEtBQUksOGhCQUFKOztBQWlCQSxLQUFNLGVBQWUsU0FBZixZQUFlLENBQUMsTUFBRCxFQUFZO0FBQ2hDLE1BQUksZUFBZSxTQUFTLGdCQUFULENBQTBCLHdCQUExQixDQUFuQjtBQUNBLE1BQUksVUFBVSxhQUFhLGFBQWEsTUFBYixHQUFzQixDQUFuQyxDQUFkOztBQUVBLFNBQU8sT0FBUCxDQUFlLGlCQUFTO0FBQ3ZCLE9BQUksT0FBTyxTQUFTLGFBQVQsQ0FBdUIsS0FBdkIs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QXVCLDBCQUF2QixDQUFiOztBQUVBLFdBQVMsT0FBVCxDQUFpQixrQkFBVTtBQUMxQixPQUFJLFVBQVUsU0FBUyxhQUFULENBQXVCLFFBQXZCLENBQWQ7O0FBRUEsV0FBUSxTQUFSLEdBQW9CLE9BQU8sV0FBUCxFQUFwQjtBQUNBLFdBQVEsU0FBUixHQUFvQix5QkFBcEI7O0FBRUEsVUFBTyxNQUFQLENBQWMsT0FBZDtBQUNBLEdBUEQ7QUFRQSxFQVhEOztBQWFBLEtBQU0sT0FBTyxTQUFQLElBQU8sR0FBTTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBTEQ7O0FBT0E7QUFFQSxDQXZLYSxFQUFkOzs7Ozs7OztBQ1RBLElBQU0sTUFBTSxTQUFOLEdBQU0sR0FBTTtBQUNqQixTQUFRLEdBQVIsQ0FBWSxpQkFBWjtBQUNBLENBRkQ7O2tCQUllLEciLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsImltcG9ydCBuYXYgZnJvbSAnLi9uYXZpZ2F0aW9uJztcblxuY29uc3QgdGVzdCA9ICgpID0+IHtcblx0Y29uc29sZS5sb2coJ25hdjogJywgbmF2KTtcblx0bmF2KClcbn07XG5cbnRlc3QoKTtcblxuY29uc3QgYnVpbGQgPSAoKCkgPT4ge1xuXHRjb25zdCBEQiA9ICdodHRwczovL25leHVzLWNhdGFsb2cuZmlyZWJhc2Vpby5jb20vcG9zdHMuanNvbj9hdXRoPTdnN3B5S0t5a04zTjVld3JJbWhPYVM2dndyRnNjNWZLa3JrOGVqemYnO1xuXHRjb25zdCBhbHBoYWJldCA9IFsnYScsICdiJywgJ2MnLCAnZCcsICdlJywgJ2YnLCAnZycsICdoJywgJ2knLCAnaicsICdrJywgJ2wnLCAnbScsICduJywgJ28nLCAncCcsICdxJywgJ3InLCAncycsICd0JywgJ3UnLCAndicsICd3JywgJ3gnLCAneScsICd6J107XG5cblx0Ly8gMCA9IGFydGlzdCwgMSA9IHRpdGxlXG5cdGxldCBzb3J0S2V5ID0gMDtcblx0bGV0IGVudHJpZXMgPSB7XG5cdFx0YnlBdXRob3I6IFtdLFxuXHRcdGJ5VGl0bGU6IFtdXG5cdH07XG5cblx0bGV0IGFydGljbGVUZW1wbGF0ZSA9IGBcblx0XHQ8YXJ0aWNsZSBjbGFzcz1cImFydGljbGVfX291dGVyXCI+XG5cdFx0XHQ8ZGl2IGNsYXNzPVwiYXJ0aWNsZV9faW5uZXJcIj5cblx0XHRcdFx0PGRpdiBjbGFzcz1cImFydGljbGVfX2hlYWRpbmdcIj5cblx0XHRcdFx0XHQ8aDIgY2xhc3M9XCJhcnRpY2xlLWhlYWRpbmdfX3RpdGxlXCI+PC9oMj5cblx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwiYXJ0aWNsZS1oZWFkaW5nX19uYW1lXCI+XG5cdFx0XHRcdFx0XHQ8c3BhbiBjbGFzcz1cImFydGljbGUtaGVhZGluZ19fbmFtZS0tZmlyc3RcIj48L3NwYW4+XG5cdFx0XHRcdFx0XHQ8c3BhbiBjbGFzcz1cImFydGljbGUtaGVhZGluZ19fbmFtZS0tbGFzdFwiPjwvc3Bhbj5cblx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdDxkaXYgY2xhc3M9XCJhcnRpY2xlX19pbWFnZXMtb3V0ZXJcIj5cblx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwiYXJ0aWNsZV9faW1hZ2VzLWlubmVyXCI+PC9kaXY+XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0PC9kaXY+XG5cdFx0PC9hcnRpY2xlPlxuXHRgXG5cblx0Y29uc3QgcmVuZGVySW1hZ2VzID0gKGltYWdlcykgPT4ge1xuXHRcdGxldCAkaW1hZ2VzTm9kZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYXJ0aWNsZV9faW1hZ2VzLWlubmVyJyk7XG5cdFx0bGV0ICRpbWFnZXMgPSAkaW1hZ2VzTm9kZXNbJGltYWdlc05vZGVzLmxlbmd0aCAtIDFdO1xuXG5cdFx0aW1hZ2VzLmZvckVhY2goaW1hZ2UgPT4ge1xuXHRcdFx0bGV0ICRpbWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdJTUcnKTtcblx0XHRcdCRpbWcuc3JjID0gaW1hZ2U7XG5cdFx0XHQkaW1hZ2VzLmFwcGVuZCgkaW1nKTtcblx0XHR9KVxuXHR9O1xuXG5cdGNvbnN0IHJlbmRlckVudHJpZXMgPSAoZW50cmllcykgPT4ge1xuXHRcdGNvbnNvbGUubG9nKCdyZW5kZXJpbmcgZW50cmllcy4gc29ydEtleSBpczogJywgc29ydEtleSwgJ2VudHJpZXMgYXJlOiAnLCBlbnRyaWVzKTtcblx0XHRsZXQgJGFydGljbGVMaXN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2pzLWxpc3QnKTtcblxuXHRcdGVudHJpZXMuZm9yRWFjaChlbnRyeSA9PiB7XG5cdFx0XHRsZXQgeyB0aXRsZSwgbGFzdE5hbWUsIGZpcnN0TmFtZSwgaW1hZ2VzIH0gPSBlbnRyeTtcblxuXHRcdFx0JGFydGljbGVMaXN0Lmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgYXJ0aWNsZVRlbXBsYXRlKTtcdFxuXG5cdFx0XHRpZiAoaW1hZ2VzLmxlbmd0aCkgcmVuZGVySW1hZ2VzKGltYWdlcyk7XHRcblx0XHRcdFxuXHRcdFx0bGV0ICR0aXRsZU5vZGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmFydGljbGUtaGVhZGluZ19fdGl0bGUnKTtcblx0XHRcdGxldCAkdGl0bGUgPSAkdGl0bGVOb2Rlc1skdGl0bGVOb2Rlcy5sZW5ndGggLSAxXTtcblxuXHRcdFx0bGV0ICRmaXJzdE5vZGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmFydGljbGUtaGVhZGluZ19fbmFtZS0tZmlyc3QnKTtcblx0XHRcdGxldCAkZmlyc3QgPSAkZmlyc3ROb2Rlc1skZmlyc3ROb2Rlcy5sZW5ndGggLSAxXTtcblxuXHRcdFx0bGV0ICRsYXN0Tm9kZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYXJ0aWNsZS1oZWFkaW5nX19uYW1lLS1sYXN0Jyk7XG5cdFx0XHRsZXQgJGxhc3QgPSAkbGFzdE5vZGVzWyRsYXN0Tm9kZXMubGVuZ3RoIC0gMV07XG5cblx0XHRcdCR0aXRsZS5pbm5lckhUTUwgPSB0aXRsZTtcblx0XHRcdCRmaXJzdC5pbm5lckhUTUwgPSBmaXJzdE5hbWU7XG5cdFx0XHQkbGFzdC5pbm5lckhUTUwgPSBsYXN0TmFtZTtcblxuXHRcdH0pO1xuXHR9O1xuXG5cdGNvbnN0IHNvcnRCeVRpdGxlID0gKGRhdGEpID0+IHtcblx0XHRjb25zb2xlLmxvZygnZW50cmllcyBiZWZvcmUgc29ydDogJywgZGF0YSk7XG5cdFx0ZGF0YS5zb3J0KChhLCBiKSA9PiBcblx0XHRcdGIudGl0bGVbMF0udG9VcHBlckNhc2UoKSAtIGEudGl0bGVbMF0udG9VcHBlckNhc2UoKVxuXHRcdCk7XG5cblx0XHRlbnRyaWVzLmJ5VGl0bGUgPSBkYXRhO1xuXHRcdGNvbnNvbGUubG9nKCdlbnRyaWVzIGFmdGVyIHNvcnQ6ICcsIGVudHJpZXMuYnlUaXRsZSlcblx0fTtcblxuXHRjb25zdCBmZXRjaERhdGEgPSAoKSA9PiB7XG5cdFx0XHRmZXRjaChEQikudGhlbihyZXMgPT5cblx0XHRcdFx0cmVzLmpzb24oKVxuXHRcdFx0KS50aGVuKGRhdGEgPT4ge1xuXHRcdFx0XHRzb3J0QnlUaXRsZShkYXRhKTtcblx0XHRcdFx0ZW50cmllcy5ieUF1dGhvciA9IGRhdGE7IFxuXHRcdFx0XHRyZW5kZXJFbnRyaWVzKGVudHJpZXMuYnlBdXRob3IpO1xuXHRcdFx0fSkudGhlbigoKSA9PiB7XG5cdFx0XHRcdC8vIHNldEJhY2tncm91bmQoKTtcblx0XHRcdH0pLmNhdGNoKGVyciA9PiBjb25zb2xlLndhcm4oZXJyKSk7XG5cdH07XG5cblx0Y29uc3QgYWRkU29ydEJ1dHRvbkxpc3RlbmVycyA9ICgpID0+IHtcblx0XHRsZXQgJGF1dGhvciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdqcy1hdXRob3InKTtcblx0XHRsZXQgJHRpdGxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2pzLXRpdGxlJyk7XG5cblx0XHQkYXV0aG9yLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuXHRcdFx0aWYgKHNvcnRLZXkpIHtcblx0XHRcdFx0c29ydEtleSA9IDA7XG5cdFx0XHRcdHJlbmRlckVudHJpZXMoZW50cmllcy5ieUF1dGhvcik7XG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHQkdGl0bGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG5cdFx0XHRpZiAoIXNvcnRLZXkpIHtcblx0XHRcdFx0c29ydEtleSA9IDE7XG5cdFx0XHRcdGNvbnNvbGUubG9nKCdpbiB0aXRsZS4gc29ydEtleSBpczogJywgc29ydEtleSk7XG5cdFx0XHRcdHJlbmRlckVudHJpZXMoZW50cmllcy5ieVRpdGxlKTtcblx0XHRcdH1cblx0XHR9KTtcblx0fTtcblxuXHRsZXQgaXNTaG93aW5nID0gZmFsc2U7XG5cdGNvbnN0IHRvZ2dsZU1vYmlsZU5hdiA9ICgpID0+IHtcblx0XHRsZXQgJG5hdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdqcy1uYXYnKTtcblx0XHRsZXQgJGljb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnanMtYW5nbGUtaWNvbicpO1xuXHRcdGxldCAkbGlzdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdqcy1saXN0Jyk7XG5cdFx0Y29uc29sZS5sb2coJ25hdiBpczogJywgJG5hdiwgJyRsaXN0IGlzOiAnLCAkbGlzdCk7XG5cdFx0aWYgKCFpc1Nob3dpbmcpIHsgXG5cdFx0XHRcdCRuYXYuY2xhc3NMaXN0LmFkZCgndS1zaG93Jyk7XG5cdFx0XHRcdCRpY29uLnNldEF0dHJpYnV0ZSgnc3R5bGUnLCAndHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnJyk7XG5cdFx0XHRcdCRsaXN0LnNldEF0dHJpYnV0ZSgnc3R5bGUnLCAndHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIxMHB4KScpO1xuXG5cdFx0XHRcdGlzU2hvd2luZyA9IHRydWU7XG5cdFx0fSBlbHNlIHsgXG5cdFx0XHQkbmF2LmNsYXNzTGlzdC5yZW1vdmUoJ3Utc2hvdycpO1xuXHRcdFx0JG5hdi5jbGFzc0xpc3QuYWRkKCd1LWhpZGUnKVxuXHRcdFx0JGljb24uc2V0QXR0cmlidXRlKCdzdHlsZScsICd0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnJyk7XG5cdFx0XHQkbGlzdC5zZXRBdHRyaWJ1dGUoJ3N0eWxlJywgJ3RyYW5zZm9ybTogdHJhbnNsYXRlWSg2NXB4KScpO1xuXG5cdFx0XHRpc1Nob3dpbmcgPSBmYWxzZTtcblx0XHR9O1xuXHR9O1xuXG5cdGNvbnN0IGFkZE1vYmlsZUNvbnRyb2xCdXR0b24gPSAoKSA9PiB7XG5cdFx0bGV0ICRidXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnanMtbW9iaWxlLW5hdicpO1xuXHRcdCRidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0b2dnbGVNb2JpbGVOYXYpO1xuXHR9XG5cblx0Ly8gY29uc3Qgc2V0QmFja2dyb3VuZCA9ICgpID0+IHtcblx0Ly8gXHRsZXQgYXJ0aWNsZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYXJ0aWNsZV9fb3V0ZXInKTtcblx0Ly8gXHRjb25zb2xlLmxvZygnYXJ0aWNsZXM6ICcsIGFydGljbGVzKTtcblxuXHQvLyBcdEFycmF5LmZyb20oYXJ0aWNsZXMpLmZvckVhY2goKGEsIGkpID0+IHtcblx0Ly8gXHRcdGxldCBkaXJlY3Rpb24gPSAoaSAlIDIgIT09IDApID8gJ2JvdHRvbScgOiAndG9wJztcblx0Ly8gXHRcdGEuc3R5bGUuYmFja2dyb3VuZCA9IGBsaW5lYXItZ3JhZGllbnQodG8gJHtkaXJlY3Rpb259LCByZWQsIHllbGxvdylgO1xuIC8vIFx0XHR9KTtcblx0Ly8gfTtcblxuXHRjb25zdCBtYWtlQWxwaGFiZXQgPSAoKSA9PiB7XG5cdFx0bGV0ICRvdXRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hbHBoYWJldF9fbGV0dGVycy1pbm5lcicpO1xuXG5cdFx0YWxwaGFiZXQuZm9yRWFjaChsZXR0ZXIgPT4ge1xuXHRcdFx0bGV0ICRidXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcblxuXHRcdFx0JGJ1dHRvbi5pbm5lckhUTUwgPSBsZXR0ZXIudG9VcHBlckNhc2UoKTtcblx0XHRcdCRidXR0b24uY2xhc3NOYW1lID0gJ2FscGhhYmV0X19sZXR0ZXItYnV0dG9uJztcblxuXHRcdFx0JG91dGVyLmFwcGVuZCgkYnV0dG9uKTtcblx0XHR9KVxuXHR9O1xuXG5cdGNvbnN0IGluaXQgPSAoKSA9PiB7XG5cdFx0ZmV0Y2hEYXRhKCk7XG5cdFx0bWFrZUFscGhhYmV0KCk7XG5cdFx0YWRkTW9iaWxlQ29udHJvbEJ1dHRvbigpO1xuXHRcdGFkZFNvcnRCdXR0b25MaXN0ZW5lcnMoKTtcblx0fVxuXG5cdGluaXQoKTtcblxufSkoKTsiLCJjb25zdCBuYXYgPSAoKSA9PiB7XG5cdGNvbnNvbGUubG9nKFwiVEhJUyBJUyBXT1JLSU5HXCIpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgbmF2OyJdLCJwcmVFeGlzdGluZ0NvbW1lbnQiOiIvLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbTV2WkdWZmJXOWtkV3hsY3k5aWNtOTNjMlZ5TFhCaFkyc3ZYM0J5Wld4MVpHVXVhbk1pTENKemNtTXZhbk12YVc1a1pYZ3Vhbk1pTENKemNtTXZhbk12Ym1GMmFXZGhkR2x2Ymk1cWN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRVHM3TzBGRFFVRTdPenM3T3p0QlFVVkJMRWxCUVUwc1QwRkJUeXhUUVVGUUxFbEJRVThzUjBGQlRUdEJRVU5zUWl4VFFVRlJMRWRCUVZJc1EwRkJXU3hQUVVGYUxFVkJRWEZDTEc5Q1FVRnlRanRCUVVOQk8wRkJRMEVzUTBGSVJEczdRVUZMUVRzN1FVRkZRU3hKUVVGTkxGRkJRVk1zV1VGQlRUdEJRVU53UWl4TFFVRk5MRXRCUVVzc0swWkJRVmc3UVVGRFFTeExRVUZOTEZkQlFWY3NRMEZCUXl4SFFVRkVMRVZCUVUwc1IwRkJUaXhGUVVGWExFZEJRVmdzUlVGQlowSXNSMEZCYUVJc1JVRkJjVUlzUjBGQmNrSXNSVUZCTUVJc1IwRkJNVUlzUlVGQkswSXNSMEZCTDBJc1JVRkJiME1zUjBGQmNFTXNSVUZCZVVNc1IwRkJla01zUlVGQk9FTXNSMEZCT1VNc1JVRkJiVVFzUjBGQmJrUXNSVUZCZDBRc1IwRkJlRVFzUlVGQk5rUXNSMEZCTjBRc1JVRkJhMFVzUjBGQmJFVXNSVUZCZFVVc1IwRkJka1VzUlVGQk5FVXNSMEZCTlVVc1JVRkJhVVlzUjBGQmFrWXNSVUZCYzBZc1IwRkJkRVlzUlVGQk1rWXNSMEZCTTBZc1JVRkJaMGNzUjBGQmFFY3NSVUZCY1Vjc1IwRkJja2NzUlVGQk1FY3NSMEZCTVVjc1JVRkJLMGNzUjBGQkwwY3NSVUZCYjBnc1IwRkJjRWdzUlVGQmVVZ3NSMEZCZWtnc1JVRkJPRWdzUjBGQk9VZ3NRMEZCYWtJN08wRkJSVUU3UVVGRFFTeExRVUZKTEZWQlFWVXNRMEZCWkR0QlFVTkJMRXRCUVVrc1ZVRkJWVHRCUVVOaUxGbEJRVlVzUlVGRVJ6dEJRVVZpTEZkQlFWTTdRVUZHU1N4RlFVRmtPenRCUVV0QkxFdEJRVWtzT0doQ1FVRktPenRCUVdsQ1FTeExRVUZOTEdWQlFXVXNVMEZCWml4WlFVRmxMRU5CUVVNc1RVRkJSQ3hGUVVGWk8wRkJRMmhETEUxQlFVa3NaVUZCWlN4VFFVRlRMR2RDUVVGVUxFTkJRVEJDTEhkQ1FVRXhRaXhEUVVGdVFqdEJRVU5CTEUxQlFVa3NWVUZCVlN4aFFVRmhMR0ZCUVdFc1RVRkJZaXhIUVVGelFpeERRVUZ1UXl4RFFVRmtPenRCUVVWQkxGTkJRVThzVDBGQlVDeERRVUZsTEdsQ1FVRlRPMEZCUTNaQ0xFOUJRVWtzVDBGQlR5eFRRVUZUTEdGQlFWUXNRMEZCZFVJc1MwRkJka0lzUTBGQldEdEJRVU5CTEZGQlFVc3NSMEZCVEN4SFFVRlhMRXRCUVZnN1FVRkRRU3hYUVVGUkxFMUJRVklzUTBGQlpTeEpRVUZtTzBGQlEwRXNSMEZLUkR0QlFVdEJMRVZCVkVRN08wRkJWMEVzUzBGQlRTeG5Ra0ZCWjBJc1UwRkJhRUlzWVVGQlowSXNRMEZCUXl4UFFVRkVMRVZCUVdFN1FVRkRiRU1zVlVGQlVTeEhRVUZTTEVOQlFWa3NhVU5CUVZvc1JVRkJLME1zVDBGQkwwTXNSVUZCZDBRc1pVRkJlRVFzUlVGQmVVVXNUMEZCZWtVN1FVRkRRU3hOUVVGSkxHVkJRV1VzVTBGQlV5eGpRVUZVTEVOQlFYZENMRk5CUVhoQ0xFTkJRVzVDT3p0QlFVVkJMRlZCUVZFc1QwRkJVaXhEUVVGblFpeHBRa0ZCVXp0QlFVRkJMRTlCUTJ4Q0xFdEJSR3RDTEVkQlEzRkNMRXRCUkhKQ0xFTkJRMnhDTEV0QlJHdENPMEZCUVVFc1QwRkRXQ3hSUVVSWExFZEJRM0ZDTEV0QlJISkNMRU5CUTFnc1VVRkVWenRCUVVGQkxFOUJRMFFzVTBGRVF5eEhRVU54UWl4TFFVUnlRaXhEUVVORUxGTkJSRU03UVVGQlFTeFBRVU5WTEUxQlJGWXNSMEZEY1VJc1MwRkVja0lzUTBGRFZTeE5RVVJXT3pzN1FVRkhlRUlzWjBKQlFXRXNhMEpCUVdJc1EwRkJaME1zVjBGQmFFTXNSVUZCTmtNc1pVRkJOME03TzBGQlJVRXNUMEZCU1N4UFFVRlBMRTFCUVZnc1JVRkJiVUlzWVVGQllTeE5RVUZpT3p0QlFVVnVRaXhQUVVGSkxHTkJRV01zVTBGQlV5eG5Ra0ZCVkN4RFFVRXdRaXg1UWtGQk1VSXNRMEZCYkVJN1FVRkRRU3hQUVVGSkxGTkJRVk1zV1VGQldTeFpRVUZaTEUxQlFWb3NSMEZCY1VJc1EwRkJha01zUTBGQllqczdRVUZGUVN4UFFVRkpMR05CUVdNc1UwRkJVeXhuUWtGQlZDeERRVUV3UWl3clFrRkJNVUlzUTBGQmJFSTdRVUZEUVN4UFFVRkpMRk5CUVZNc1dVRkJXU3haUVVGWkxFMUJRVm9zUjBGQmNVSXNRMEZCYWtNc1EwRkJZanM3UVVGRlFTeFBRVUZKTEdGQlFXRXNVMEZCVXl4blFrRkJWQ3hEUVVFd1FpdzRRa0ZCTVVJc1EwRkJha0k3UVVGRFFTeFBRVUZKTEZGQlFWRXNWMEZCVnl4WFFVRlhMRTFCUVZnc1IwRkJiMElzUTBGQkwwSXNRMEZCV2pzN1FVRkZRU3hWUVVGUExGTkJRVkFzUjBGQmJVSXNTMEZCYmtJN1FVRkRRU3hWUVVGUExGTkJRVkFzUjBGQmJVSXNVMEZCYmtJN1FVRkRRU3hUUVVGTkxGTkJRVTRzUjBGQmEwSXNVVUZCYkVJN1FVRkZRU3hIUVhCQ1JEdEJRWEZDUVN4RlFYcENSRHM3UVVFeVFrRXNTMEZCVFN4alFVRmpMRk5CUVdRc1YwRkJZeXhEUVVGRExFbEJRVVFzUlVGQlZUdEJRVU0zUWl4VlFVRlJMRWRCUVZJc1EwRkJXU3gxUWtGQldpeEZRVUZ4UXl4SlFVRnlRenRCUVVOQkxFOUJRVXNzU1VGQlRDeERRVUZWTEZWQlFVTXNRMEZCUkN4RlFVRkpMRU5CUVVvN1FVRkJRU3hWUVVOVUxFVkJRVVVzUzBGQlJpeERRVUZSTEVOQlFWSXNSVUZCVnl4WFFVRllMRXRCUVRKQ0xFVkJRVVVzUzBGQlJpeERRVUZSTEVOQlFWSXNSVUZCVnl4WFFVRllMRVZCUkd4Q08wRkJRVUVzUjBGQlZqczdRVUZKUVN4VlFVRlJMRTlCUVZJc1IwRkJhMElzU1VGQmJFSTdRVUZEUVN4VlFVRlJMRWRCUVZJc1EwRkJXU3h6UWtGQldpeEZRVUZ2UXl4UlFVRlJMRTlCUVRWRE8wRkJRMEVzUlVGU1JEczdRVUZWUVN4TFFVRk5MRmxCUVZrc1UwRkJXaXhUUVVGWkxFZEJRVTA3UVVGRGRFSXNVVUZCVFN4RlFVRk9MRVZCUVZVc1NVRkJWaXhEUVVGbE8wRkJRVUVzVlVGRFpDeEpRVUZKTEVsQlFVb3NSVUZFWXp0QlFVRkJMRWRCUVdZc1JVRkZSU3hKUVVaR0xFTkJSVThzWjBKQlFWRTdRVUZEWkN4bFFVRlpMRWxCUVZvN1FVRkRRU3hYUVVGUkxGRkJRVklzUjBGQmJVSXNTVUZCYmtJN1FVRkRRU3hwUWtGQll5eFJRVUZSTEZGQlFYUkNPMEZCUTBFc1IwRk9SQ3hGUVUxSExFbEJUa2dzUTBGTlVTeFpRVUZOTzBGQlEySTdRVUZEUVN4SFFWSkVMRVZCVVVjc1MwRlNTQ3hEUVZGVE8wRkJRVUVzVlVGQlR5eFJRVUZSTEVsQlFWSXNRMEZCWVN4SFFVRmlMRU5CUVZBN1FVRkJRU3hIUVZKVU8wRkJVMFFzUlVGV1JEczdRVUZaUVN4TFFVRk5MSGxDUVVGNVFpeFRRVUY2UWl4elFrRkJlVUlzUjBGQlRUdEJRVU53UXl4TlFVRkpMRlZCUVZVc1UwRkJVeXhqUVVGVUxFTkJRWGRDTEZkQlFYaENMRU5CUVdRN1FVRkRRU3hOUVVGSkxGTkJRVk1zVTBGQlV5eGpRVUZVTEVOQlFYZENMRlZCUVhoQ0xFTkJRV0k3TzBGQlJVRXNWVUZCVVN4blFrRkJVaXhEUVVGNVFpeFBRVUY2UWl4RlFVRnJReXhaUVVGTk8wRkJRM1pETEU5QlFVa3NUMEZCU2l4RlFVRmhPMEZCUTFvc1kwRkJWU3hEUVVGV08wRkJRMEVzYTBKQlFXTXNVVUZCVVN4UlFVRjBRanRCUVVOQk8wRkJRMFFzUjBGTVJEczdRVUZQUVN4VFFVRlBMR2RDUVVGUUxFTkJRWGRDTEU5QlFYaENMRVZCUVdsRExGbEJRVTA3UVVGRGRFTXNUMEZCU1N4RFFVRkRMRTlCUVV3c1JVRkJZenRCUVVOaUxHTkJRVlVzUTBGQlZqdEJRVU5CTEZsQlFWRXNSMEZCVWl4RFFVRlpMSGRDUVVGYUxFVkJRWE5ETEU5QlFYUkRPMEZCUTBFc2EwSkJRV01zVVVGQlVTeFBRVUYwUWp0QlFVTkJPMEZCUTBRc1IwRk9SRHRCUVU5QkxFVkJiRUpFT3p0QlFXOUNRU3hMUVVGSkxGbEJRVmtzUzBGQmFFSTdRVUZEUVN4TFFVRk5MR3RDUVVGclFpeFRRVUZzUWl4bFFVRnJRaXhIUVVGTk8wRkJRemRDTEUxQlFVa3NUMEZCVHl4VFFVRlRMR05CUVZRc1EwRkJkMElzVVVGQmVFSXNRMEZCV0R0QlFVTkJMRTFCUVVrc1VVRkJVU3hUUVVGVExHTkJRVlFzUTBGQmQwSXNaVUZCZUVJc1EwRkJXanRCUVVOQkxFMUJRVWtzVVVGQlVTeFRRVUZUTEdOQlFWUXNRMEZCZDBJc1UwRkJlRUlzUTBGQldqdEJRVU5CTEZWQlFWRXNSMEZCVWl4RFFVRlpMRlZCUVZvc1JVRkJkMElzU1VGQmVFSXNSVUZCT0VJc1dVRkJPVUlzUlVGQk5FTXNTMEZCTlVNN1FVRkRRU3hOUVVGSkxFTkJRVU1zVTBGQlRDeEZRVUZuUWp0QlFVTmtMRkZCUVVzc1UwRkJUQ3hEUVVGbExFZEJRV1lzUTBGQmJVSXNVVUZCYmtJN1FVRkRRU3hUUVVGTkxGbEJRVTRzUTBGQmJVSXNUMEZCYmtJc1JVRkJORUlzTUVKQlFUVkNPMEZCUTBFc1UwRkJUU3haUVVGT0xFTkJRVzFDTEU5QlFXNUNMRVZCUVRSQ0xEaENRVUUxUWpzN1FVRkZRU3hsUVVGWkxFbEJRVm83UVVGRFJDeEhRVTVFTEUxQlRVODdRVUZEVGl4UlFVRkxMRk5CUVV3c1EwRkJaU3hOUVVGbUxFTkJRWE5DTEZGQlFYUkNPMEZCUTBFc1VVRkJTeXhUUVVGTUxFTkJRV1VzUjBGQlppeERRVUZ0UWl4UlFVRnVRanRCUVVOQkxGTkJRVTBzV1VGQlRpeERRVUZ0UWl4UFFVRnVRaXhGUVVFMFFpeDNRa0ZCTlVJN1FVRkRRU3hUUVVGTkxGbEJRVTRzUTBGQmJVSXNUMEZCYmtJc1JVRkJORUlzTmtKQlFUVkNPenRCUVVWQkxHVkJRVmtzUzBGQldqdEJRVU5CTzBGQlEwUXNSVUZ1UWtRN08wRkJjVUpCTEV0QlFVMHNlVUpCUVhsQ0xGTkJRWHBDTEhOQ1FVRjVRaXhIUVVGTk8wRkJRM0JETEUxQlFVa3NWVUZCVlN4VFFVRlRMR05CUVZRc1EwRkJkMElzWlVGQmVFSXNRMEZCWkR0QlFVTkJMRlZCUVZFc1owSkJRVklzUTBGQmVVSXNUMEZCZWtJc1JVRkJhME1zWlVGQmJFTTdRVUZEUVN4RlFVaEVPenRCUVV0Qk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTEV0QlFVMHNaVUZCWlN4VFFVRm1MRmxCUVdVc1IwRkJUVHRCUVVNeFFpeE5RVUZKTEZOQlFWTXNVMEZCVXl4aFFVRlVMRU5CUVhWQ0xEQkNRVUYyUWl4RFFVRmlPenRCUVVWQkxGZEJRVk1zVDBGQlZDeERRVUZwUWl4clFrRkJWVHRCUVVNeFFpeFBRVUZKTEZWQlFWVXNVMEZCVXl4aFFVRlVMRU5CUVhWQ0xGRkJRWFpDTEVOQlFXUTdPMEZCUlVFc1YwRkJVU3hUUVVGU0xFZEJRVzlDTEU5QlFVOHNWMEZCVUN4RlFVRndRanRCUVVOQkxGZEJRVkVzVTBGQlVpeEhRVUZ2UWl4NVFrRkJjRUk3TzBGQlJVRXNWVUZCVHl4TlFVRlFMRU5CUVdNc1QwRkJaRHRCUVVOQkxFZEJVRVE3UVVGUlFTeEZRVmhFT3p0QlFXRkJMRXRCUVUwc1QwRkJUeXhUUVVGUUxFbEJRVThzUjBGQlRUdEJRVU5zUWp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFVkJURVE3TzBGQlQwRTdRVUZGUVN4RFFYWkxZU3hGUVVGa096czdPenM3T3p0QlExUkJMRWxCUVUwc1RVRkJUU3hUUVVGT0xFZEJRVTBzUjBGQlRUdEJRVU5xUWl4VFFVRlJMRWRCUVZJc1EwRkJXU3hwUWtGQldqdEJRVU5CTEVOQlJrUTdPMnRDUVVsbExFY2lMQ0ptYVd4bElqb2laMlZ1WlhKaGRHVmtMbXB6SWl3aWMyOTFjbU5sVW05dmRDSTZJaUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWlobWRXNWpkR2x2YmlncGUyWjFibU4wYVc5dUlISW9aU3h1TEhRcGUyWjFibU4wYVc5dUlHOG9hU3htS1h0cFppZ2hibHRwWFNsN2FXWW9JV1ZiYVYwcGUzWmhjaUJqUFZ3aVpuVnVZM1JwYjI1Y0lqMDlkSGx3Wlc5bUlISmxjWFZwY21VbUpuSmxjWFZwY21VN2FXWW9JV1ltSm1NcGNtVjBkWEp1SUdNb2FTd2hNQ2s3YVdZb2RTbHlaWFIxY200Z2RTaHBMQ0V3S1R0MllYSWdZVDF1WlhjZ1JYSnliM0lvWENKRFlXNXViM1FnWm1sdVpDQnRiMlIxYkdVZ0oxd2lLMmtyWENJblhDSXBPM1JvY205M0lHRXVZMjlrWlQxY0lrMVBSRlZNUlY5T1QxUmZSazlWVGtSY0lpeGhmWFpoY2lCd1BXNWJhVjA5ZTJWNGNHOXlkSE02ZTMxOU8yVmJhVjFiTUYwdVkyRnNiQ2h3TG1WNGNHOXlkSE1zWm5WdVkzUnBiMjRvY2lsN2RtRnlJRzQ5WlZ0cFhWc3hYVnR5WFR0eVpYUjFjbTRnYnlodWZIeHlLWDBzY0N4d0xtVjRjRzl5ZEhNc2NpeGxMRzRzZENsOWNtVjBkWEp1SUc1YmFWMHVaWGh3YjNKMGMzMW1iM0lvZG1GeUlIVTlYQ0ptZFc1amRHbHZibHdpUFQxMGVYQmxiMllnY21WeGRXbHlaU1ltY21WeGRXbHlaU3hwUFRBN2FUeDBMbXhsYm1kMGFEdHBLeXNwYnloMFcybGRLVHR5WlhSMWNtNGdiMzF5WlhSMWNtNGdjbjBwS0NraUxDSnBiWEJ2Y25RZ2JtRjJJR1p5YjIwZ0p5NHZibUYyYVdkaGRHbHZiaWM3WEc1Y2JtTnZibk4wSUhSbGMzUWdQU0FvS1NBOVBpQjdYRzVjZEdOdmJuTnZiR1V1Ykc5bktDZHVZWFk2SUNjc0lHNWhkaWs3WEc1Y2RHNWhkaWdwWEc1OU8xeHVYRzUwWlhOMEtDazdYRzVjYm1OdmJuTjBJR0oxYVd4a0lEMGdLQ2dwSUQwK0lIdGNibHgwWTI5dWMzUWdSRUlnUFNBbmFIUjBjSE02THk5dVpYaDFjeTFqWVhSaGJHOW5MbVpwY21WaVlYTmxhVzh1WTI5dEwzQnZjM1J6TG1wemIyNC9ZWFYwYUQwM1p6ZHdlVXRMZVd0T00wNDFaWGR5U1cxb1QyRlROblozY2taell6Vm1TMnR5YXpobGFucG1KenRjYmx4MFkyOXVjM1FnWVd4d2FHRmlaWFFnUFNCYkoyRW5MQ0FuWWljc0lDZGpKeXdnSjJRbkxDQW5aU2NzSUNkbUp5d2dKMmNuTENBbmFDY3NJQ2RwSnl3Z0oyb25MQ0FuYXljc0lDZHNKeXdnSjIwbkxDQW5iaWNzSUNkdkp5d2dKM0FuTENBbmNTY3NJQ2R5Snl3Z0ozTW5MQ0FuZENjc0lDZDFKeXdnSjNZbkxDQW5keWNzSUNkNEp5d2dKM2tuTENBbmVpZGRPMXh1WEc1Y2RDOHZJREFnUFNCaGNuUnBjM1FzSURFZ1BTQjBhWFJzWlZ4dVhIUnNaWFFnYzI5eWRFdGxlU0E5SURBN1hHNWNkR3hsZENCbGJuUnlhV1Z6SUQwZ2UxeHVYSFJjZEdKNVFYVjBhRzl5T2lCYlhTeGNibHgwWEhSaWVWUnBkR3hsT2lCYlhWeHVYSFI5TzF4dVhHNWNkR3hsZENCaGNuUnBZMnhsVkdWdGNHeGhkR1VnUFNCZ1hHNWNkRngwUEdGeWRHbGpiR1VnWTJ4aGMzTTlYQ0poY25ScFkyeGxYMTl2ZFhSbGNsd2lQbHh1WEhSY2RGeDBQR1JwZGlCamJHRnpjejFjSW1GeWRHbGpiR1ZmWDJsdWJtVnlYQ0krWEc1Y2RGeDBYSFJjZER4a2FYWWdZMnhoYzNNOVhDSmhjblJwWTJ4bFgxOW9aV0ZrYVc1blhDSStYRzVjZEZ4MFhIUmNkRngwUEdneUlHTnNZWE56UFZ3aVlYSjBhV05zWlMxb1pXRmthVzVuWDE5MGFYUnNaVndpUGp3dmFESStYRzVjZEZ4MFhIUmNkRngwUEdScGRpQmpiR0Z6Y3oxY0ltRnlkR2xqYkdVdGFHVmhaR2x1WjE5ZmJtRnRaVndpUGx4dVhIUmNkRngwWEhSY2RGeDBQSE53WVc0Z1kyeGhjM005WENKaGNuUnBZMnhsTFdobFlXUnBibWRmWDI1aGJXVXRMV1pwY25OMFhDSStQQzl6Y0dGdVBseHVYSFJjZEZ4MFhIUmNkRngwUEhOd1lXNGdZMnhoYzNNOVhDSmhjblJwWTJ4bExXaGxZV1JwYm1kZlgyNWhiV1V0TFd4aGMzUmNJajQ4TDNOd1lXNCtYRzVjZEZ4MFhIUmNkRngwUEM5a2FYWStYRzVjZEZ4MFhIUmNkRHd2WkdsMlBseHVYSFJjZEZ4MFhIUThaR2wySUdOc1lYTnpQVndpWVhKMGFXTnNaVjlmYVcxaFoyVnpMVzkxZEdWeVhDSStYRzVjZEZ4MFhIUmNkRngwUEdScGRpQmpiR0Z6Y3oxY0ltRnlkR2xqYkdWZlgybHRZV2RsY3kxcGJtNWxjbHdpUGp3dlpHbDJQbHh1WEhSY2RGeDBYSFE4TDJScGRqNWNibHgwWEhSY2REd3ZaR2wyUGx4dVhIUmNkRHd2WVhKMGFXTnNaVDVjYmx4MFlGeHVYRzVjZEdOdmJuTjBJSEpsYm1SbGNrbHRZV2RsY3lBOUlDaHBiV0ZuWlhNcElEMCtJSHRjYmx4MFhIUnNaWFFnSkdsdFlXZGxjMDV2WkdWeklEMGdaRzlqZFcxbGJuUXVjWFZsY25sVFpXeGxZM1J2Y2tGc2JDZ25MbUZ5ZEdsamJHVmZYMmx0WVdkbGN5MXBibTVsY2ljcE8xeHVYSFJjZEd4bGRDQWthVzFoWjJWeklEMGdKR2x0WVdkbGMwNXZaR1Z6V3lScGJXRm5aWE5PYjJSbGN5NXNaVzVuZEdnZ0xTQXhYVHRjYmx4dVhIUmNkR2x0WVdkbGN5NW1iM0pGWVdOb0tHbHRZV2RsSUQwK0lIdGNibHgwWEhSY2RHeGxkQ0FrYVcxbklEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZENnblNVMUhKeWs3WEc1Y2RGeDBYSFFrYVcxbkxuTnlZeUE5SUdsdFlXZGxPMXh1WEhSY2RGeDBKR2x0WVdkbGN5NWhjSEJsYm1Rb0pHbHRaeWs3WEc1Y2RGeDBmU2xjYmx4MGZUdGNibHh1WEhSamIyNXpkQ0J5Wlc1a1pYSkZiblJ5YVdWeklEMGdLR1Z1ZEhKcFpYTXBJRDArSUh0Y2JseDBYSFJqYjI1emIyeGxMbXh2WnlnbmNtVnVaR1Z5YVc1bklHVnVkSEpwWlhNdUlITnZjblJMWlhrZ2FYTTZJQ2NzSUhOdmNuUkxaWGtzSUNkbGJuUnlhV1Z6SUdGeVpUb2dKeXdnWlc1MGNtbGxjeWs3WEc1Y2RGeDBiR1YwSUNSaGNuUnBZMnhsVEdsemRDQTlJR1J2WTNWdFpXNTBMbWRsZEVWc1pXMWxiblJDZVVsa0tDZHFjeTFzYVhOMEp5azdYRzVjYmx4MFhIUmxiblJ5YVdWekxtWnZja1ZoWTJnb1pXNTBjbmtnUFQ0Z2UxeHVYSFJjZEZ4MGJHVjBJSHNnZEdsMGJHVXNJR3hoYzNST1lXMWxMQ0JtYVhKemRFNWhiV1VzSUdsdFlXZGxjeUI5SUQwZ1pXNTBjbms3WEc1Y2JseDBYSFJjZENSaGNuUnBZMnhsVEdsemRDNXBibk5sY25SQlpHcGhZMlZ1ZEVoVVRVd29KMkpsWm05eVpXVnVaQ2NzSUdGeWRHbGpiR1ZVWlcxd2JHRjBaU2s3WEhSY2JseHVYSFJjZEZ4MGFXWWdLR2x0WVdkbGN5NXNaVzVuZEdncElISmxibVJsY2tsdFlXZGxjeWhwYldGblpYTXBPMXgwWEc1Y2RGeDBYSFJjYmx4MFhIUmNkR3hsZENBa2RHbDBiR1ZPYjJSbGN5QTlJR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNKQmJHd29KeTVoY25ScFkyeGxMV2hsWVdScGJtZGZYM1JwZEd4bEp5azdYRzVjZEZ4MFhIUnNaWFFnSkhScGRHeGxJRDBnSkhScGRHeGxUbTlrWlhOYkpIUnBkR3hsVG05a1pYTXViR1Z1WjNSb0lDMGdNVjA3WEc1Y2JseDBYSFJjZEd4bGRDQWtabWx5YzNST2IyUmxjeUE5SUdSdlkzVnRaVzUwTG5GMVpYSjVVMlZzWldOMGIzSkJiR3dvSnk1aGNuUnBZMnhsTFdobFlXUnBibWRmWDI1aGJXVXRMV1pwY25OMEp5azdYRzVjZEZ4MFhIUnNaWFFnSkdacGNuTjBJRDBnSkdacGNuTjBUbTlrWlhOYkpHWnBjbk4wVG05a1pYTXViR1Z1WjNSb0lDMGdNVjA3WEc1Y2JseDBYSFJjZEd4bGRDQWtiR0Z6ZEU1dlpHVnpJRDBnWkc5amRXMWxiblF1Y1hWbGNubFRaV3hsWTNSdmNrRnNiQ2duTG1GeWRHbGpiR1V0YUdWaFpHbHVaMTlmYm1GdFpTMHRiR0Z6ZENjcE8xeHVYSFJjZEZ4MGJHVjBJQ1JzWVhOMElEMGdKR3hoYzNST2IyUmxjMXNrYkdGemRFNXZaR1Z6TG14bGJtZDBhQ0F0SURGZE8xeHVYRzVjZEZ4MFhIUWtkR2wwYkdVdWFXNXVaWEpJVkUxTUlEMGdkR2wwYkdVN1hHNWNkRngwWEhRa1ptbHljM1F1YVc1dVpYSklWRTFNSUQwZ1ptbHljM1JPWVcxbE8xeHVYSFJjZEZ4MEpHeGhjM1F1YVc1dVpYSklWRTFNSUQwZ2JHRnpkRTVoYldVN1hHNWNibHgwWEhSOUtUdGNibHgwZlR0Y2JseHVYSFJqYjI1emRDQnpiM0owUW5sVWFYUnNaU0E5SUNoa1lYUmhLU0E5UGlCN1hHNWNkRngwWTI5dWMyOXNaUzVzYjJjb0oyVnVkSEpwWlhNZ1ltVm1iM0psSUhOdmNuUTZJQ2NzSUdSaGRHRXBPMXh1WEhSY2RHUmhkR0V1YzI5eWRDZ29ZU3dnWWlrZ1BUNGdYRzVjZEZ4MFhIUmlMblJwZEd4bFd6QmRMblJ2VlhCd1pYSkRZWE5sS0NrZ0xTQmhMblJwZEd4bFd6QmRMblJ2VlhCd1pYSkRZWE5sS0NsY2JseDBYSFFwTzF4dVhHNWNkRngwWlc1MGNtbGxjeTVpZVZScGRHeGxJRDBnWkdGMFlUdGNibHgwWEhSamIyNXpiMnhsTG14dlp5Z25aVzUwY21sbGN5QmhablJsY2lCemIzSjBPaUFuTENCbGJuUnlhV1Z6TG1KNVZHbDBiR1VwWEc1Y2RIMDdYRzVjYmx4MFkyOXVjM1FnWm1WMFkyaEVZWFJoSUQwZ0tDa2dQVDRnZTF4dVhIUmNkRngwWm1WMFkyZ29SRUlwTG5Sb1pXNG9jbVZ6SUQwK1hHNWNkRngwWEhSY2RISmxjeTVxYzI5dUtDbGNibHgwWEhSY2RDa3VkR2hsYmloa1lYUmhJRDArSUh0Y2JseDBYSFJjZEZ4MGMyOXlkRUo1VkdsMGJHVW9aR0YwWVNrN1hHNWNkRngwWEhSY2RHVnVkSEpwWlhNdVlubEJkWFJvYjNJZ1BTQmtZWFJoT3lCY2JseDBYSFJjZEZ4MGNtVnVaR1Z5Ulc1MGNtbGxjeWhsYm5SeWFXVnpMbUo1UVhWMGFHOXlLVHRjYmx4MFhIUmNkSDBwTG5Sb1pXNG9LQ2tnUFQ0Z2UxeHVYSFJjZEZ4MFhIUXZMeUJ6WlhSQ1lXTnJaM0p2ZFc1a0tDazdYRzVjZEZ4MFhIUjlLUzVqWVhSamFDaGxjbklnUFQ0Z1kyOXVjMjlzWlM1M1lYSnVLR1Z5Y2lrcE8xeHVYSFI5TzF4dVhHNWNkR052Ym5OMElHRmtaRk52Y25SQ2RYUjBiMjVNYVhOMFpXNWxjbk1nUFNBb0tTQTlQaUI3WEc1Y2RGeDBiR1YwSUNSaGRYUm9iM0lnUFNCa2IyTjFiV1Z1ZEM1blpYUkZiR1Z0Wlc1MFFubEpaQ2duYW5NdFlYVjBhRzl5SnlrN1hHNWNkRngwYkdWMElDUjBhWFJzWlNBOUlHUnZZM1Z0Wlc1MExtZGxkRVZzWlcxbGJuUkNlVWxrS0NkcWN5MTBhWFJzWlNjcE8xeHVYRzVjZEZ4MEpHRjFkR2h2Y2k1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NkamJHbGpheWNzSUNncElEMCtJSHRjYmx4MFhIUmNkR2xtSUNoemIzSjBTMlY1S1NCN1hHNWNkRngwWEhSY2RITnZjblJMWlhrZ1BTQXdPMXh1WEhSY2RGeDBYSFJ5Wlc1a1pYSkZiblJ5YVdWektHVnVkSEpwWlhNdVlubEJkWFJvYjNJcE8xeHVYSFJjZEZ4MGZWeHVYSFJjZEgwcE8xeHVYRzVjZEZ4MEpIUnBkR3hsTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSjJOc2FXTnJKeXdnS0NrZ1BUNGdlMXh1WEhSY2RGeDBhV1lnS0NGemIzSjBTMlY1S1NCN1hHNWNkRngwWEhSY2RITnZjblJMWlhrZ1BTQXhPMXh1WEhSY2RGeDBYSFJqYjI1emIyeGxMbXh2WnlnbmFXNGdkR2wwYkdVdUlITnZjblJMWlhrZ2FYTTZJQ2NzSUhOdmNuUkxaWGtwTzF4dVhIUmNkRngwWEhSeVpXNWtaWEpGYm5SeWFXVnpLR1Z1ZEhKcFpYTXVZbmxVYVhSc1pTazdYRzVjZEZ4MFhIUjlYRzVjZEZ4MGZTazdYRzVjZEgwN1hHNWNibHgwYkdWMElHbHpVMmh2ZDJsdVp5QTlJR1poYkhObE8xeHVYSFJqYjI1emRDQjBiMmRuYkdWTmIySnBiR1ZPWVhZZ1BTQW9LU0E5UGlCN1hHNWNkRngwYkdWMElDUnVZWFlnUFNCa2IyTjFiV1Z1ZEM1blpYUkZiR1Z0Wlc1MFFubEpaQ2duYW5NdGJtRjJKeWs3WEc1Y2RGeDBiR1YwSUNScFkyOXVJRDBnWkc5amRXMWxiblF1WjJWMFJXeGxiV1Z1ZEVKNVNXUW9KMnB6TFdGdVoyeGxMV2xqYjI0bktUdGNibHgwWEhSc1pYUWdKR3hwYzNRZ1BTQmtiMk4xYldWdWRDNW5aWFJGYkdWdFpXNTBRbmxKWkNnbmFuTXRiR2x6ZENjcE8xeHVYSFJjZEdOdmJuTnZiR1V1Ykc5bktDZHVZWFlnYVhNNklDY3NJQ1J1WVhZc0lDY2tiR2x6ZENCcGN6b2dKeXdnSkd4cGMzUXBPMXh1WEhSY2RHbG1JQ2doYVhOVGFHOTNhVzVuS1NCN0lGeHVYSFJjZEZ4MFhIUWtibUYyTG1Oc1lYTnpUR2x6ZEM1aFpHUW9KM1V0YzJodmR5Y3BPMXh1WEhSY2RGeDBYSFFrYVdOdmJpNXpaWFJCZEhSeWFXSjFkR1VvSjNOMGVXeGxKeXdnSjNSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0RFNE1HUmxaeWNwTzF4dVhIUmNkRngwWEhRa2JHbHpkQzV6WlhSQmRIUnlhV0oxZEdVb0ozTjBlV3hsSnl3Z0ozUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXU2d5TVRCd2VDa25LVHRjYmx4dVhIUmNkRngwWEhScGMxTm9iM2RwYm1jZ1BTQjBjblZsTzF4dVhIUmNkSDBnWld4elpTQjdJRnh1WEhSY2RGeDBKRzVoZGk1amJHRnpjMHhwYzNRdWNtVnRiM1psS0NkMUxYTm9iM2NuS1R0Y2JseDBYSFJjZENSdVlYWXVZMnhoYzNOTWFYTjBMbUZrWkNnbmRTMW9hV1JsSnlsY2JseDBYSFJjZENScFkyOXVMbk5sZEVGMGRISnBZblYwWlNnbmMzUjViR1VuTENBbmRISmhibk5tYjNKdE9pQnliM1JoZEdVb01HUmxaeWNwTzF4dVhIUmNkRngwSkd4cGMzUXVjMlYwUVhSMGNtbGlkWFJsS0NkemRIbHNaU2NzSUNkMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWa29OalZ3ZUNrbktUdGNibHh1WEhSY2RGeDBhWE5UYUc5M2FXNW5JRDBnWm1Gc2MyVTdYRzVjZEZ4MGZUdGNibHgwZlR0Y2JseHVYSFJqYjI1emRDQmhaR1JOYjJKcGJHVkRiMjUwY205c1FuVjBkRzl1SUQwZ0tDa2dQVDRnZTF4dVhIUmNkR3hsZENBa1luVjBkRzl1SUQwZ1pHOWpkVzFsYm5RdVoyVjBSV3hsYldWdWRFSjVTV1FvSjJwekxXMXZZbWxzWlMxdVlYWW5LVHRjYmx4MFhIUWtZblYwZEc5dUxtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0oyTnNhV05ySnl3Z2RHOW5aMnhsVFc5aWFXeGxUbUYyS1R0Y2JseDBmVnh1WEc1Y2RDOHZJR052Ym5OMElITmxkRUpoWTJ0bmNtOTFibVFnUFNBb0tTQTlQaUI3WEc1Y2RDOHZJRngwYkdWMElHRnlkR2xqYkdWeklEMGdaRzlqZFcxbGJuUXVjWFZsY25sVFpXeGxZM1J2Y2tGc2JDZ25MbUZ5ZEdsamJHVmZYMjkxZEdWeUp5azdYRzVjZEM4dklGeDBZMjl1YzI5c1pTNXNiMmNvSjJGeWRHbGpiR1Z6T2lBbkxDQmhjblJwWTJ4bGN5azdYRzVjYmx4MEx5OGdYSFJCY25KaGVTNW1jbTl0S0dGeWRHbGpiR1Z6S1M1bWIzSkZZV05vS0NoaExDQnBLU0E5UGlCN1hHNWNkQzh2SUZ4MFhIUnNaWFFnWkdseVpXTjBhVzl1SUQwZ0tHa2dKU0F5SUNFOVBTQXdLU0EvSUNkaWIzUjBiMjBuSURvZ0ozUnZjQ2M3WEc1Y2RDOHZJRngwWEhSaExuTjBlV3hsTG1KaFkydG5jbTkxYm1RZ1BTQmdiR2x1WldGeUxXZHlZV1JwWlc1MEtIUnZJQ1I3WkdseVpXTjBhVzl1ZlN3Z2NtVmtMQ0I1Wld4c2IzY3BZRHRjYmlBdkx5QmNkRngwZlNrN1hHNWNkQzh2SUgwN1hHNWNibHgwWTI5dWMzUWdiV0ZyWlVGc2NHaGhZbVYwSUQwZ0tDa2dQVDRnZTF4dVhIUmNkR3hsZENBa2IzVjBaWElnUFNCa2IyTjFiV1Z1ZEM1eGRXVnllVk5sYkdWamRHOXlLQ2N1WVd4d2FHRmlaWFJmWDJ4bGRIUmxjbk10YVc1dVpYSW5LVHRjYmx4dVhIUmNkR0ZzY0doaFltVjBMbVp2Y2tWaFkyZ29iR1YwZEdWeUlEMCtJSHRjYmx4MFhIUmNkR3hsZENBa1luVjBkRzl1SUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkQ2duWW5WMGRHOXVKeWs3WEc1Y2JseDBYSFJjZENSaWRYUjBiMjR1YVc1dVpYSklWRTFNSUQwZ2JHVjBkR1Z5TG5SdlZYQndaWEpEWVhObEtDazdYRzVjZEZ4MFhIUWtZblYwZEc5dUxtTnNZWE56VG1GdFpTQTlJQ2RoYkhCb1lXSmxkRjlmYkdWMGRHVnlMV0oxZEhSdmJpYzdYRzVjYmx4MFhIUmNkQ1J2ZFhSbGNpNWhjSEJsYm1Rb0pHSjFkSFJ2YmlrN1hHNWNkRngwZlNsY2JseDBmVHRjYmx4dVhIUmpiMjV6ZENCcGJtbDBJRDBnS0NrZ1BUNGdlMXh1WEhSY2RHWmxkR05vUkdGMFlTZ3BPMXh1WEhSY2RHMWhhMlZCYkhCb1lXSmxkQ2dwTzF4dVhIUmNkR0ZrWkUxdlltbHNaVU52Ym5SeWIyeENkWFIwYjI0b0tUdGNibHgwWEhSaFpHUlRiM0owUW5WMGRHOXVUR2x6ZEdWdVpYSnpLQ2s3WEc1Y2RIMWNibHh1WEhScGJtbDBLQ2s3WEc1Y2JuMHBLQ2s3SWl3aVkyOXVjM1FnYm1GMklEMGdLQ2tnUFQ0Z2UxeHVYSFJqYjI1emIyeGxMbXh2WnloY0lsUklTVk1nU1ZNZ1YwOVNTMGxPUjF3aUtUdGNibjA3WEc1Y2JtVjRjRzl5ZENCa1pXWmhkV3gwSUc1aGRqc2lYWDA9In0=
